[{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"generating-cohorts","dir":"Articles","previous_headings":"","what":"Generating Cohorts","title":"Computing Treatment Pathways","text":"First need read cohorts. can open connection database, case Eunomia. Finally can generate cohort set cohort table database can see cohorts generated cohort table. cohort cohort_definition_id 5 count 0, Death cohort. detrimental, exit cohorts optional, good know Death show results.","code":"library(CDMConnector)  cohortSet <- readCohortSet(   path = system.file(package = \"TreatmentPatterns\", \"exampleCohorts\") )  cohortSet ## # A tibble: 8 × 5 ##   cohort_definition_id cohort_name    cohort       json   cohort_name_snakecase ##                  <int> <chr>          <list>       <list> <chr>                 ## 1                    1 acetaminophen  <named list> <chr>  acetaminophen         ## 2                    2 amoxicillin    <named list> <chr>  amoxicillin           ## 3                    3 aspirin        <named list> <chr>  aspirin               ## 4                    4 clavulanate    <named list> <chr>  clavulanate           ## 5                    5 death          <named list> <chr>  death                 ## 6                    6 doxylamine     <named list> <chr>  doxylamine            ## 7                    7 penicillinv    <named list> <chr>  penicillinv           ## 8                    8 viralsinusitis <named list> <chr>  viralsinusitis ##  ## Attaching package: 'Eunomia' ## The following object is masked from 'package:CDMConnector': ##  ##     downloadEunomiaData ##  ## Download completed! con <- DBI::dbConnect(   drv = duckdb::duckdb(),   dbdir = eunomia_dir() ) ## Warning: `eunomia_dir()` was deprecated in CDMConnector 1.7.0. ## ℹ Please use `eunomiaDir()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ## Creating CDM database /tmp/RtmpEjXXYF/file2f40e5c0a6a/GiBleed_5.3.zip cdm <- cdmFromCon(   con = con,   cdmSchema = \"main\",   writeSchema = \"main\" ) ## Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', ##  target signature 'duckdb_connection#Id'. ##  \"duckdb_connection#ANY\" would also be valid ## ! cdm name not specified and could not be inferred from the cdm source table cdm ##  ## ── # OMOP CDM reference (duckdb) of An OMOP CDM database ─────────────────────── ## • omop tables: person, observation_period, visit_occurrence, visit_detail, ## condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, ## measurement, observation, death, note, note_nlp, specimen, fact_relationship, ## location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, ## condition_era, metadata, cdm_source, concept, vocabulary, domain, ## concept_class, concept_relationship, relationship, concept_synonym, ## concept_ancestor, source_to_concept_map, drug_strength ## • cohort tables: - ## • achilles tables: - ## • other tables: - cdm <- generateCohortSet(   cdm = cdm,   cohortSet = cohortSet,   name = \"cohort_table\",   overwrite = TRUE ) ## ℹ Generating 8 cohorts ## ℹ Generating cohort (1/8) - acetaminophen ## ✔ Generating cohort (1/8) - acetaminophen [367ms] ## ## ℹ Generating cohort (2/8) - amoxicillin ## ✔ Generating cohort (2/8) - amoxicillin [188ms] ## ## ℹ Generating cohort (3/8) - aspirin ## ✔ Generating cohort (3/8) - aspirin [178ms] ## ## ℹ Generating cohort (4/8) - clavulanate ## ✔ Generating cohort (4/8) - clavulanate [147ms] ## ## ℹ Generating cohort (5/8) - death ## ✔ Generating cohort (5/8) - death [121ms] ## ## ℹ Generating cohort (6/8) - doxylamine ## ✔ Generating cohort (6/8) - doxylamine [147ms] ## ## ℹ Generating cohort (7/8) - penicillinv ## ✔ Generating cohort (7/8) - penicillinv [146ms] ## ## ℹ Generating cohort (8/8) - viralsinusitis ## ✔ Generating cohort (8/8) - viralsinusitis [223ms] ## cohortCount(cdm$cohort_table) ## # A tibble: 8 × 3 ##   cohort_definition_id number_records number_subjects ##                  <int>          <int>           <int> ## 1                    1           2679            2679 ## 2                    2           2130            2130 ## 3                    3           1927            1927 ## 4                    4           2021            2021 ## 5                    5              0               0 ## 6                    6           1393            1393 ## 7                    7           1732            1732 ## 8                    8           2159            2159"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"computing-pathways","dir":"Articles","previous_headings":"","what":"Computing pathways","title":"Computing Treatment Pathways","text":"computePathways function TreatmentPatterns allows us compute treatment pathways cohort table. order need pre-specify parameters. According documentation need data.frame specifies cohort type. Data frame containing following columns data types: cohortId numeric(1) Cohort ID’s cohorts used cohort table. cohortName character(1) Cohort names cohorts used cohort table. type character(1) [“target”, “event’,”exit”] Cohort type, describing cohort target, event, exit cohort able re-use cohortSet . already contains cohort ID’s cohort names. remove cohort json columns, add type column, rename cohort_definition_id cohortId cohort_name cohortName. data.frame cohort types, CDM reference, cohort table name database can compute treatment pathways, settings defaults. output computePathways Andromeda environment, allows us investigate intermediate results patient-level data. data sharable. DatabaseConnector also supported. following parameters required instead cdm: connectionDetails: ConnectionDetails object form DatabaseConnector. cdmSchema: Schema CDM exists. resultSchema: Schema write cohort table . tempEmulationSchema: database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. following code snippet works Eunomia, cohort table (cohort_table) exists database, cohorts data frame created.","code":"library(dplyr)  cohorts <- cohortSet %>%   # Remove 'cohort' and 'json' columns   select(-\"cohort\", -\"json\", -\"cohort_name_snakecase\") %>%   mutate(type = c(\"event\", \"event\", \"event\", \"event\", \"exit\", \"event\", \"event\", \"target\")) %>%   rename(     cohortId = \"cohort_definition_id\",     cohortName = \"cohort_name\",   )  cohorts ## # A tibble: 8 × 3 ##   cohortId cohortName     type   ##      <int> <chr>          <chr>  ## 1        1 acetaminophen  event  ## 2        2 amoxicillin    event  ## 3        3 aspirin        event  ## 4        4 clavulanate    event  ## 5        5 death          exit   ## 6        6 doxylamine     event  ## 7        7 penicillinv    event  ## 8        8 viralsinusitis target library(TreatmentPatterns)  defaultSettings <- computePathways(   cohorts = cohorts,   cohortTableName = \"cohort_table\",   cdm = cdm ) ## -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 ##  Records: 14041 ##  Subjects: 2693 ## -- Removing records < minEraDuration (0) ##  Records: 11386 ##  Subjects: 2159 ## >> Starting on target: 8 (viralsinusitis) ## -- Removing events where index date < target index date + indexDateOffset (0) ##  Records: 8381 ##  Subjects: 2159 ## -- splitEventCohorts ##  Records: 8366 ##  Subjects: 2144 ## -- Collapsing eras, eraCollapse (30) ##  Records: 8366 ##  Subjects: 2144 ## -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 558 ##  Subjects: 512 ## -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 554 ##  Subjects: 512 ## -- After Combination ##  Records: 554 ##  Subjects: 512 ## -- filterTreatments (First) ##  Records: 553 ##  Subjects: 512 ## -- treatment construction done ##  Records: 553 ##  Subjects: 512 defaultSettings ## # Andromeda object ## # Physical location:  /tmp/RtmpEjXXYF/file2f405a7b6825.sqlite ##  ## Tables: ## $addRowsFRFS_1 (personId, indexYear, eventCohortId, eventStartDate, eventEndDate, type, age, sex, targetCohortId, durationEra, sortOrder, gapPrevious, selectedRows, switch, combinationFRFS, combinationLRFS, eventStartDateNext, eventEndDatePrevious, eventEndDateNext, eventCohortIdPrevious) ## $addRowsFRFS_2 (personId, indexYear, eventCohortId, targetCohortId, eventStartDate, age, sex, eventEndDate, durationEra, gapPrevious, sortOrder, selectedRows, switch, combinationFRFS, combinationLRFS, eventStartDateNext, eventEndDatePrevious, eventEndDateNext, eventCohortIdPrevious) ## $addRowsLRFS_1 (personId, indexYear, eventCohortId, eventStartDate, eventEndDate, type, age, sex, targetCohortId, durationEra, sortOrder, gapPrevious, selectedRows, switch, combinationFRFS, combinationLRFS, eventStartDateNext, eventEndDatePrevious, eventEndDateNext, eventCohortIdPrevious, checkDuration) ## $addRowsLRFS_2 (personId, indexYear, eventCohortId, targetCohortId, eventStartDate, age, sex, eventEndDate, durationEra, gapPrevious, sortOrder, selectedRows, switch, combinationFRFS, combinationLRFS, eventStartDateNext, eventEndDatePrevious, eventEndDateNext, eventCohortIdPrevious, checkDuration) ## $analyses (analysis_id, description) ## $arguments (analysis_id, arguments) ## $attrition (number_records, number_subjects, reason_id, reason, time_stamp) ## $cdm_source_info (cdm_source_name, cdm_source_abbreviation, cdm_holder, source_description, source_documentation_reference, cdm_etl_reference, source_release_date, cdm_release_date, cdm_version, vocabulary_version) ## $cohortTable (cohortId, personId, subject_id_origin, startDate, endDate, age, sex) ## $cohortTable_8 (cohortIdEvent, personId, subject_id_origin, startDateEvent, endDateEvent, ageEvent, sexEvent, typeEvent, cohortIdTarget, startDateTarget, endDateTarget, ageTarget, sexTarget, typeTarget, indexYear, indexDate) ## $cohorts (cohortId, cohortName, type) ## $currentCohorts (cohortId, personId, subject_id_origin, startDate, endDate, age, sex) ## $dbplyr_1WRZorR1u5 (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_5pWJOAFS8a (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_6RTXYj8SWn (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_9H5PXKstDn (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_BD55Q9nvAe (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_KndACw8jLb (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_c6hVi7vmXr (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_g2ZRmBV2zb (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_hYqzXdzCNp (number_records, number_subjects, reason_id, reason, time_stamp) ## $dbplyr_oLvteQFdqV (number_records, number_subjects, reason_id, reason, time_stamp) ## $eventCohorts (cohortId, personId, subject_id_origin, startDate, endDate, age, sex, type) ## $exitCohorts (cohortId, personId, subject_id_origin, startDate, endDate, age, sex, type) ## $exitHistory (personId, indexYear, eventCohortId, eventStartDate, eventEndDate, age, sex, targetCohortId, durationEra) ## $labels (eventCohortId, eventCohortName) ## $metadata (execution_start, package_version, r_version, platform, execution_end) ## $sqlite_stat1 (tbl, idx, stat) ## $sqlite_stat4 (tbl, idx, neq, nlt, ndlt, sample) ## $targetCohorts (cohortId, personId, subject_id_origin, startDate, endDate, age, sex, type, indexYear, indexDate) ## $treatmentHistory (eventCohortId, personId, indexYear, targetCohortId, eventStartDate, age, sex, eventEndDate, durationEra, sortOrder, eventSeq, eventCohortName) ## $treatmentHistoryFinal (eventCohortId, personId, indexYear, targetCohortId, eventStartDate, age, sex, eventEndDate, durationEra, sortOrder, eventSeq, eventCohortName) # treatmentHistory table head(defaultSettings$treatmentHistory) ## # Source:   SQL [?? x 12] ## # Database: sqlite 3.47.1 [/tmp/RtmpEjXXYF/file2f405a7b6825.sqlite] ##   eventCohortId personId indexYear targetCohortId eventStartDate   age sex    ##   <chr>            <dbl>     <dbl>          <int>          <int> <dbl> <chr>  ## 1 1                 1198      1962              8          -2763     3 MALE   ## 2 1                  934      1960              8          -3471     3 FEMALE ## 3 1                  608      1970              8            161     4 MALE   ## 4 1                  960      1960              8           -510    13 FEMALE ## 5 1                  561      1973              8           1178    10 FEMALE ## 6 1                  263      1974              8           1819     2 MALE   ## # ℹ 5 more variables: eventEndDate <int>, durationEra <int>, sortOrder <dbl>, ## #   eventSeq <int>, eventCohortName <chr> # metadata table defaultSettings$metadata ## # Source:   table<`metadata`> [?? x 5] ## # Database: sqlite 3.47.1 [/tmp/RtmpEjXXYF/file2f405a7b6825.sqlite] ##   execution_start package_version r_version               platform execution_end ##             <dbl> <chr>           <chr>                   <chr>            <dbl> ## 1     1738915376. 3.0.0           R version 4.4.2 (2024-… x86_64-…   1738915383. # First Recieved First Stopped head(defaultSettings$addRowsFRFS_1) ## # Source:   SQL [?? x 20] ## # Database: sqlite 3.47.1 [/tmp/RtmpEjXXYF/file2f405a7b6825.sqlite] ## # ℹ 20 variables: personId <lgl>, indexYear <dbl>, eventCohortId <lgl>, ## #   eventStartDate <int>, eventEndDate <lgl>, type <lgl>, age <dbl>, sex <chr>, ## #   targetCohortId <int>, durationEra <lgl>, sortOrder <lgl>, ## #   gapPrevious <lgl>, selectedRows <lgl>, switch <lgl>, combinationFRFS <lgl>, ## #   combinationLRFS <lgl>, eventStartDateNext <lgl>, ## #   eventEndDatePrevious <lgl>, eventEndDateNext <lgl>, ## #   eventCohortIdPrevious <lgl> # Last Recieved Last Stopped head(defaultSettings$addRowsLRFS_1) ## # Source:   SQL [?? x 21] ## # Database: sqlite 3.47.1 [/tmp/RtmpEjXXYF/file2f405a7b6825.sqlite] ##   personId indexYear eventCohortId eventStartDate eventEndDate type    age sex   ##      <dbl>     <dbl> <chr>                  <int>        <int> <chr> <dbl> <chr> ## 1        2      4363 2                       5344         5344 event     6 FEMA… ## 2        3      2581 2                       3192         3192 event     4 MALE  ## 3        6      4062 2                       4201         4201 event    10 MALE  ## 4        8      1729 1                       3668         3668 event    10 MALE  ## 5        9       -74 4                        -67          -67 event     3 MALE  ## 6       10      2936 2                       3166         3166 event     5 MALE  ## # ℹ 13 more variables: targetCohortId <int>, durationEra <int>, ## #   sortOrder <dbl>, gapPrevious <int>, selectedRows <dbl>, switch <dbl>, ## #   combinationFRFS <dbl>, combinationLRFS <dbl>, eventStartDateNext <int>, ## #   eventEndDatePrevious <int>, eventEndDateNext <int>, ## #   eventCohortIdPrevious <chr>, checkDuration <dbl> computePathways(   cohorts = cohorts,   cohortTableName = cohortTableName,   connectionDetails = Eunomia::getEunomiaConnectionDetails(),   cdmSchema = \"main\",   resultSchema = \"main\",   tempEmulationSchema = NULL )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"pathway-settings","dir":"Articles","previous_headings":"","what":"Pathway settings","title":"Computing Treatment Pathways","text":"Even though default settings work well use cases, might work situations. settings allow us influence events interest processed form treatment pathways. following figure shows parameters affect computation treatment pathway. can add settings computePathways function call. Lets see happens set minEraDuration 60, keep rest settings mentioned default values. Number treatments minimum duration greater equal 0 days. Number treatments minimum duration greater equal 60 days.","code":"minEra60 <- computePathways(   cohorts = cohorts,   cohortTableName = \"cohort_table\",   cdm = cdm,   # Pathway settings   indexDateOffset = 0,   minEraDuration = 60,   eraCollapseSize = 30,   combinationWindow = 30,   minPostCombinationDuration = 30,   filterTreatments = \"First\",   maxPathLength = 5 ) ## Warning in validateComputePathways(): The `minPostCombinationDuration` is set ## lower than the `minEraDuration`, this might result in unexpected behavior ## Warning in validateComputePathways(): The `combinationWindow` is set lower than ## the `minEraDuration`, this might result in unexpected behavior ## -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 ##  Records: 14041 ##  Subjects: 2693 ## -- Removing records < minEraDuration (60) ##  Records: 2523 ##  Subjects: 2159 ## >> Starting on target: 8 (viralsinusitis) ## -- Removing events where index date < target index date + indexDateOffset (0) ##  Records: 2216 ##  Subjects: 2159 ## -- splitEventCohorts ##  Records: 336 ##  Subjects: 279 ## -- Collapsing eras, eraCollapse (30) ##  Records: 336 ##  Subjects: 279 ## -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 291 ##  Subjects: 279 ## -- After Combination ##  Records: 291 ##  Subjects: 279 ## -- filterTreatments (First) ##  Records: 291 ##  Subjects: 279 ## -- treatment construction done ##  Records: 291 ##  Subjects: 279 defaultSettings$treatmentHistory %>%   collect() %>%   nrow() ## [1] 553 minEra60$treatmentHistory %>%   collect() %>%   nrow() ## [1] 291"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"acute-and-therapy-splits","dir":"Articles","previous_headings":"Pathway settings","what":"Acute and Therapy splits","title":"Computing Treatment Pathways","text":"can also split defined event cohorts acute therapy cohorts. Let’s say want assume first 60 days treatment acute, beyond therapy. can see Acetaminophen cohorts split Acetaminophen (acute) (therapy). Acute labels Acetaminophen cohorts lasting less defined splitTime, case 60 days. Therapy labels Acetaminophen cohorts lasting 60 days .","code":"splitAcuteTherapy <- computePathways(   cohorts = cohorts,   cohortTableName = \"cohort_table\",   cdm = cdm,   # Split settings   splitEventCohorts = 1,   splitTime = 60 ) ## -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 ##  Records: 14041 ##  Subjects: 2693 ## -- Removing records < minEraDuration (0) ##  Records: 11386 ##  Subjects: 2159 ## >> Starting on target: 8 (viralsinusitis) ## -- Removing events where index date < target index date + indexDateOffset (0) ##  Records: 8381 ##  Subjects: 2159 ## -- splitEventCohorts ##  Records: 8366 ##  Subjects: 2144 ## -- Collapsing eras, eraCollapse (30) ##  Records: 8366 ##  Subjects: 2144 ## -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 558 ##  Subjects: 512 ## -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 554 ##  Subjects: 512 ## -- After Combination ##  Records: 554 ##  Subjects: 512 ## -- filterTreatments (First) ##  Records: 553 ##  Subjects: 512 ## -- treatment construction done ##  Records: 553 ##  Subjects: 512 splitAcuteTherapy$treatmentHistory %>%   pull(.data$eventCohortName) %>% unique() ## [1] \"acetaminophen (acute)\"             \"acetaminophen (acute)+amoxicillin\" ## [3] \"acetaminophens (therapy)\"          \"amoxicillin\"                       ## [5] \"amoxicillin+clavulanate\"           \"aspirin\"                           ## [7] \"clavulanate\""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"include-treatments-in-a-time-frame","dir":"Articles","previous_headings":"Pathway settings","what":"Include treatments in a time frame","title":"Computing Treatment Pathways","text":"can dictate time frame want look. can look start date target cohort wards, can look end date target cohort. default TreatmentPatterns looks start date onwards. example case Viral Sinusitis appears matter, personID’s identical.","code":"includeEndDate <- computePathways(   cohorts = cohorts,   cohortTableName = \"cohort_table\",   cdm = cdm,   # Split settings   includeTreatments = \"endDate\" ) ## -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 ##  Records: 14041 ##  Subjects: 2693 ## -- Removing records < minEraDuration (0) ##  Records: 11386 ##  Subjects: 2159 ## >> Starting on target: 8 (viralsinusitis) ## -- Removing events where index date < target index date + indexDateOffset (0) ##  Records: 8381 ##  Subjects: 2159 ## -- splitEventCohorts ##  Records: 8366 ##  Subjects: 2144 ## -- Collapsing eras, eraCollapse (30) ##  Records: 8366 ##  Subjects: 2144 ## -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 558 ##  Subjects: 512 ## -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 554 ##  Subjects: 512 ## -- After Combination ##  Records: 554 ##  Subjects: 512 ## -- filterTreatments (First) ##  Records: 553 ##  Subjects: 512 ## -- treatment construction done ##  Records: 553 ##  Subjects: 512 identical(   includeEndDate$treatmentHistory %>% pull(personId),   defaultSettings$treatmentHistory %>% pull(personId) ) ## [1] TRUE"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"exporting-result-objects","dir":"Articles","previous_headings":"","what":"Exporting result objects","title":"Computing Treatment Pathways","text":"export function allows us export generated result objects computePathways. several arguments can change alter behavior, depending allowed share.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"mincellcount-and-censortype","dir":"Articles","previous_headings":"Exporting result objects","what":"minCellCount and censorType","title":"Computing Treatment Pathways","text":"Let’s say able share results groups subjects least 5 subjects . can also choose different methods handle pathways fall specified minCellCount. types 1) \"cellCount\", 2) \"remove\", 3) \"mean\". say want censor pathways fall minCellCount censored minCellCount. completely remove finally can censor mean groups fall minCellCount.","code":"results <- export(   andromeda = defaultSettings,   minCellCount = 5 ) resultsA <- export(   andromeda = minEra60,   minCellCount = 5,   censorType = \"minCellCount\" ) resultsB <- export(   andromeda = minEra60,   minCellCount = 5,   censorType = \"remove\" ) resultsC <- export(   andromeda = minEra60,   minCellCount = 5,   censorType = \"mean\" )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"agewindow","dir":"Articles","previous_headings":"Exporting result objects","what":"ageWindow","title":"Computing Treatment Pathways","text":"can also specify age window. collection ages.","code":"resultsD <- export(   andromeda = splitAcuteTherapy,   minCellCount = 5,   censorType = \"mean\",   ageWindow = 3 ) resultsE <- export(   andromeda = splitAcuteTherapy,   minCellCount = 5,   censorType = \"mean\",   ageWindow = c(0, 18, 25, 30, 40, 50, 60, 150) )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"archivename","dir":"Articles","previous_headings":"Exporting result objects","what":"archiveName","title":"Computing Treatment Pathways","text":"Finally can also specify archiveName name zip-file zip output csv-files .","code":"resultsF <- export(   andromeda = includeEndDate,   minCellCount = 5,   censorType = \"mean\",   ageWindow = 3,   archiveName = \"output.zip\" )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"all-in-one","dir":"Articles","previous_headings":"","what":"All-in-one","title":"Computing Treatment Pathways","text":"Instead using computePathways export, instead use executeTreatmentPatterns. --one function trades full control convenience. using DatabaseConnector can substitute cdm object connectionDetails, cdmSchema, resultSchema, tempEmulationSchema.","code":"resultsG <- executeTreatmentPatterns(   cohorts = cohorts,   cohortTableName = \"cohort_table\",   cdm = cdm,   minEraDuration = 0,   eraCollapseSize = 30,   combinationWindow = 30,   minCellCount = 5 ) ## -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 ##  Records: 14041 ##  Subjects: 2693 ## -- Removing records < minEraDuration (0) ##  Records: 11386 ##  Subjects: 2159 ## >> Starting on target: 8 (viralsinusitis) ## -- Removing events where index date < target index date + indexDateOffset (0) ##  Records: 8381 ##  Subjects: 2159 ## -- splitEventCohorts ##  Records: 8366 ##  Subjects: 2144 ## -- Collapsing eras, eraCollapse (30) ##  Records: 8366 ##  Subjects: 2144 ## -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 558 ##  Subjects: 512 ## -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) ##  Records: 554 ##  Subjects: 512 ## -- After Combination ##  Records: 554 ##  Subjects: 512 ## -- filterTreatments (First) ##  Records: 553 ##  Subjects: 512 ## -- treatment construction done ##  Records: 553 ##  Subjects: 512 ## Censoring 1540 pathways with a frequency <5 to mean. executeTreatmentPatterns(   cohorts = cohorts,   cohortTableName = \"cohort_table\",   connectionDetails = Eunomia::getEunomiaConnectionDetails(),   cdmSchema = \"main\",   resultSchema = \"main\",   tempEmulationSchema = NULL,   minEraDuration = 0,   eraCollapseSize = 30,   combinationWindow = 30,   minCellCount = 5 )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"evaluating-output","dir":"Articles","previous_headings":"","what":"Evaluating output","title":"Computing Treatment Pathways","text":"Now exported output, various ways, can evaluate output. may noticed export function exports 6 csv-files: 1) treatmentPathways.csv, 2) countsAge.csv, 3) countsSex.csv, 4) countsYear.csv, 5) summaryStatsTherapyDuraion.csv, 6) metadata.csv","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"treatmentpathways","dir":"Articles","previous_headings":"Evaluating output","what":"treatmentPathways","title":"Computing Treatment Pathways","text":"treatmentPathways file contains pathways found, frequency, pairwise stratified age group, sex index year. can see pathways contain treatment names provided event cohorts. Besides also see paths annoted + -. + indicates two treatments combination therapy, .e. Acetaminophen+Amoxicillin combination Acetaminophen Amoxicillin. - indicates switch treatments, .e. Aspirin-Acetaminophen switch Aspirin Acetaminophen. Note combinations switches can occur pathway, .e. Amoxicillin+Clavulanate-Aspirin. first treatment combination Amoxicillin Clavulanate switches Aspirin.","code":"results$treatment_pathways ## # A tibble: 12 × 8 ##    pathway              freq age   sex   index_year analysis_id target_cohort_id ##    <chr>               <int> <chr> <chr> <chr>            <dbl>            <int> ##  1 aspirin               211 all   all   all                  1                8 ##  2 acetaminophen         206 all   all   all                  1                8 ##  3 amoxicillin+clavul…    48 all   all   all                  1                8 ##  4 acetaminophen-aspi…    14 all   all   all                  1                8 ##  5 aspirin-acetaminop…    12 all   all   all                  1                8 ##  6 acetaminophen-amox…     6 all   all   all                  1                8 ##  7 aspirin-amoxicilli…     6 all   all   all                  1                8 ##  8 clavulanate             3 all   all   all                  1                8 ##  9 amoxicillin             2 all   all   all                  1                8 ## 10 amoxicillin+clavul…     2 all   all   all                  1                8 ## 11 acetaminophen+amox…     1 all   all   all                  1                8 ## 12 amoxicillin+clavul…     1 all   all   all                  1                8 ## # ℹ 1 more variable: target_cohort_name <chr>"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"countsage-countssex-and-countsyear","dir":"Articles","previous_headings":"Evaluating output","what":"countsAge, countsSex, and countsYear","title":"Computing Treatment Pathways","text":"countsAge, countsSex, countsYear contain counts per age, sex, index year.","code":"head(results$counts_age) ## # A tibble: 6 × 5 ##     age n     analysis_id target_cohort_id target_cohort_name ##   <dbl> <chr>       <dbl>            <int> <chr>              ## 1     1 18              1                8 viralsinusitis     ## 2     2 55              1                8 viralsinusitis     ## 3     3 45              1                8 viralsinusitis     ## 4     4 37              1                8 viralsinusitis     ## 5     5 33              1                8 viralsinusitis     ## 6     6 32              1                8 viralsinusitis head(results$counts_sex) ## # A tibble: 2 × 5 ##   sex    n     analysis_id target_cohort_id target_cohort_name ##   <chr>  <chr>       <dbl>            <int> <chr>              ## 1 FEMALE 254             1                8 viralsinusitis     ## 2 MALE   258             1                8 viralsinusitis head(results$counts_year) ## # A tibble: 6 × 5 ##   index_year n     analysis_id target_cohort_id target_cohort_name ##        <dbl> <chr>       <dbl>            <int> <chr>              ## 1       1950 11              1                8 viralsinusitis     ## 2       1951 11              1                8 viralsinusitis     ## 3       1952 10              1                8 viralsinusitis     ## 4       1953 12              1                8 viralsinusitis     ## 5       1954 12              1                8 viralsinusitis     ## 6       1955 14              1                8 viralsinusitis"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"summarystatstherapyduration","dir":"Articles","previous_headings":"Evaluating output","what":"summaryStatsTherapyDuration","title":"Computing Treatment Pathways","text":"summaryEventDuration file contains summary statistics different events, across found “lines”. “line” equal level Sunburst Sankey diagrams. summary statistics allow plotting boxplots plotEventDuration() function. can use function","code":"results$plotEventDuration() plotEventDuration(results$summary_event_duration)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"metadata","dir":"Articles","previous_headings":"Evaluating output","what":"metadata","title":"Computing Treatment Pathways","text":"metadata file file contains information circumstances analysis performed , information R, CDM.","code":"results$metadata ## # A tibble: 1 × 6 ##   execution_start package_version r_version   platform execution_end analysis_id ##             <dbl> <chr>           <chr>       <chr>            <dbl>       <dbl> ## 1     1738915376. 3.0.0           R version … x86_64-…   1738915383.           1"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/ComputingTreatmentPathways.html","id":"sunburst-plot-sankey-diagram","dir":"Articles","previous_headings":"Evaluating output","what":"Sunburst Plot & Sankey Diagram","title":"Computing Treatment Pathways","text":"filtered treatmentPathways file able create sunburst plot. Sankey Diagram. plots interactive HTML-environment, easy include shiny applications.","code":"results$plotSunburst() results$plotSankey()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/DefiningCohorts.html","id":"atlas","dir":"Articles","previous_headings":"","what":"ATLAS","title":"Defining Cohorts","text":"popular way create cohorts use ATLAS. ATLAS open source software tool researchers conduct scientific analyses standardized observational data converted OMOP Common Data Model V5. GitHub.com/OHDSI/Atlas cohort definition Viral Sinusitis may look like : following text export ATLAS Version 2.12.2. bold parts text parameters set cohort definition. People continuous observation 365 days 1,095 days event may enter cohort observing following: drug eras ‘Viral Sinusistis drugs’. Limit cohort entry events earliest event per person. 1. Viral Sinusitis diagnosis Entry events least 1 condition occurrence ‘[MVK] Viral Sinusitis diagnosis’, allow events outside >observation period. 2. Index year Entry events following event criteria: starting December 31, 1949. person exits cohort end continuous observation. Entry events combined cohort eras within 0 days . ATLAS allows export cohort definitions SQL, JSON, plain text (like ). Cohorts specified SQL may run database directly DatabaseConnector SqlRender generate cohort table. Cohorts specified JSON may generated using CohortGenerator CDMConnector generate cohort table.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/DefiningCohorts.html","id":"capr","dir":"Articles","previous_headings":"","what":"CapR","title":"Defining Cohorts","text":"CapR package allows one programatically generate cohorts. especially useful lots cohorts need created. goal Capr, pronounced ‘kay-pr’ like edible flower, provide language expressing OHDSI Cohort definitions R code. OHDSI defines cohort “set persons satisfy one inclusion criteria duration time” provides standardized approach defining (Circe-). Capr exposes standardized approach cohort building programmatic interface R particularly helpful creating large number similar cohorts. Capr version 2 introduces new user interface designed readability goal Capr code human readable description cohort also executable OMOP Common Data Model. Specifying cohort Viral Sinusitis CapR may look like : cohortSet may generated using CohortGenerator CDMConnector.","code":"library(Capr)  viralSinusitis <- cs(   descendants(40481087),   name = \"viralSinusitis\",   id = \"Viral Sinusitis\" )  viralSinusitisCohort <- cohort(   entry = entry(     conditionOccurrence(viralSinusitis),     primaryCriteriaLimit = \"First\"   ),   exit = exit(     endStrategy = observationExit()   ) )  cohortSet <- list(ViralSinusitis = viralSinusitisCohort)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/DefiningCohorts.html","id":"cohorts-for-treatmentpatterns","dir":"Articles","previous_headings":"","what":"Cohorts for TreatmentPatterns","title":"Defining Cohorts","text":"TreatmentPatterns includes following dummy cohorts defined ATLAS, usable Eunomia package: Viral Sinusitis, Acetaminophen, Amoxicillin, Aspirin, Clavunate, Doxylamine, Penicilin V, Death. cohorts specific type, meaning serve different purpose within TreatmentPatterns. types : target (required), event (least one), exit (optional). Target cohorts cohort subjects interested . Event cohorts different treatments may subjects within target cohort. Exit cohorts similar event cohorts, allow specify exiting event, like death. table can see cohort type. Given cohorts types looking within target cohort subjects diagnosed Viral Sinusitis. interested generating treatment pathways following event cohorts: Acetaminophen, Amoxicillin, Aspirin, Clavunate, Doxylamine, Penicilin V. subjects exit database dying, within bounds target cohort, tag Death. installing TreatmentPatterns cohorts accessible following code.","code":"list.files(   system.file(package = \"TreatmentPatterns\", \"exampleCohorts\"),   full.names = TRUE ) ## [1] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/Acetaminophen.json\"  ## [2] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/Amoxicillin.json\"    ## [3] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/Aspirin.json\"        ## [4] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/Clavulanate.json\"    ## [5] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/Death.json\"          ## [6] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/Doxylamine.json\"     ## [7] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/PenicillinV.json\"    ## [8] \"/home/runner/work/_temp/Library/TreatmentPatterns/exampleCohorts/ViralSinusitis.json\""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/bestPractices.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Best practices","text":"rules thumb follow using TreatmentPatterns package. rules tend work well situations, across databases datasets.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/bestPractices.html","id":"tldr","dir":"Articles","previous_headings":"Introduction","what":"TLDR","title":"Best practices","text":"minPostCombinationWindow <= minEraDuration. combinationWindow >= minEraDuration. Small cohorts considered. Pathways low count considered. Possible number pathways: nnn^n Possible number pathways, re-occurrence: n!n! Total number possible events (events + combinations): 2n−12^n - 1 Total number possible combinations: 2n−(n+1)2^n - (n + 1)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/bestPractices.html","id":"cohorts","dir":"Articles","previous_headings":"","what":"Cohorts","title":"Best practices","text":"creating cohorts, important keep mind subjects dived across pathways. Lets assume 10000 subjects fictitious cohort. Let’s also assume 5 event cohorts. total number potential pathways, assuming mono therapies equals pathwaysn=nnpathways_n = n^{n}, assuming allow re-occurring treatments still equal pathwaysn=n!pathways_n = n!. Assuming 5 event cohorts equal :","code":"5^5 ## [1] 3125 factorial(5) ## [1] 120"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/bestPractices.html","id":"combinations","dir":"Articles","previous_headings":"","what":"Combinations","title":"Best practices","text":"Combinations add additional pathway possibilities. event can uniquely combined event. combination can combine another singular event combination. However, event combination must unique. : AB=BAAB = BA. example irrelevant person receives penicillin ibuprofen ibuprofen penicillin. can draw possible combinations graph events AABBCC. subscript nodes layers combination exists . .e. combination ABAB layer 2, combinations ABCDABCD layer 4. layer coincides number events combination. can count number nodes per layer, graph: l1l2l3l4sumA13318B12104C11002D10001 \\begin{matrix}   & l1 & l2 & l3 & l4 & sum\\\\ &  1 &  3 &  3 &  1 & 8\\\\ B &  1 &  2 &  1 &  0 & 4\\\\ C &  1 &  1 &  0 &  0 & 2\\\\ D &  1 &  0 &  0 &  0 & 1 \\end{matrix} sums look suspiciously similar 2n2^n. seem overshoot 1 nn, can try 2n−12^{n-1}. total number events equals: ∑=0n−12i \\sum^{n-1}_{=0}2^{} can define function f1f_1. can simulate f1f_1 function 100 events. Notice number events increases 2n−12^n-1. define f2f_2. can compare f1f_1 f2f_2. Now can assert following: $$ monoEvents = n \\\\ totalEvents = 2^n - 1 \\\\ combinationEvents = totalEvents - n $$","code":"2^1 ## [1] 2 2^2 ## [1] 4 2^3 ## [1] 8 2^4 ## [1] 16 2^0 ## [1] 1 2^1 ## [1] 2 2^2 ## [1] 4 2^3 ## [1] 8 sum(c(2^0, 2^1, 2^2, 2^3)) ## [1] 15 # Or: n <- 4 sum(2^(0:(n - 1))) ## [1] 15 f_1 <- function(n) {   sum(2^(0:(n - 1))) } n <- 1:25 f_1_events <- unlist(lapply(n, f_1))  data.frame(   n = n,   f_1 = f_1_events ) ##     n      f_1 ## 1   1        1 ## 2   2        3 ## 3   3        7 ## 4   4       15 ## 5   5       31 ## 6   6       63 ## 7   7      127 ## 8   8      255 ## 9   9      511 ## 10 10     1023 ## 11 11     2047 ## 12 12     4095 ## 13 13     8191 ## 14 14    16383 ## 15 15    32767 ## 16 16    65535 ## 17 17   131071 ## 18 18   262143 ## 19 19   524287 ## 20 20  1048575 ## 21 21  2097151 ## 22 22  4194303 ## 23 23  8388607 ## 24 24 16777215 ## 25 25 33554431 f_2 <- function(n) {   2^n - 1 }  n <- 1:25 f_1_events <- unlist(lapply(n, f_1)) f_2_events <- unlist(lapply(n, f_2))  data.frame(   n = n,   f_1 = f_1_events,   f_2 = f_2_events ) ##     n      f_1      f_2 ## 1   1        1        1 ## 2   2        3        3 ## 3   3        7        7 ## 4   4       15       15 ## 5   5       31       31 ## 6   6       63       63 ## 7   7      127      127 ## 8   8      255      255 ## 9   9      511      511 ## 10 10     1023     1023 ## 11 11     2047     2047 ## 12 12     4095     4095 ## 13 13     8191     8191 ## 14 14    16383    16383 ## 15 15    32767    32767 ## 16 16    65535    65535 ## 17 17   131071   131071 ## 18 18   262143   262143 ## 19 19   524287   524287 ## 20 20  1048575  1048575 ## 21 21  2097151  2097151 ## 22 22  4194303  4194303 ## 23 23  8388607  8388607 ## 24 24 16777215 16777215 ## 25 25 33554431 33554431 n <- 5 totalEvents <- 2^n - 1 combinationEvents <- totalEvents - n  sprintf(\"monoEvents: %s\", n) ## [1] \"monoEvents: 5\" sprintf(\"totalEvents: %s\", totalEvents) ## [1] \"totalEvents: 31\" sprintf(\"combinationEvents: %s\", combinationEvents) ## [1] \"combinationEvents: 26\""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/bestPractices.html","id":"settings","dir":"Articles","previous_headings":"","what":"Settings","title":"Best practices","text":"minEraDuration, combinationWindow, minPostCombinationWindow significant effects treatment pathways built. Conciser following example: Assume target cohort cohort_definition_id: 1, rest event cohorts. can see, duration treatments : 19, 37 12 days. Also cohort 3 overlaps treatment 4 8 days. can compute overlap follows: see overlap treatment 2 3 -2, rather overlap gap treatments. treatment 3 4 8 day overlap. next treatment treatment 4, overlap 0, let’s assume minEraDuration = 5. can draw like : set minCombinationWindow = 5, combination computed cohort 3 4. leave us following treatments: Treatment 3 now lasts 11 days; Treatment 4 lasts 4 days; combination treatment 3+4 lasts 8 days. minPostCombinationDuration set properly, can filter either many, little treatments. Assuming set minPostCombinationDuration = 10, lose treatment 4 combination treatment 3+4. leave us following paths: rule thumb setting minPostCombinationDuration <= minEraDuration seems yield reasonable results. leave us following paths minPostCombinationDuration = 5:","code":"library(dplyr)  cohort_table <- tribble(   ~cohort_definition_id, ~subject_id, ~cohort_start_date,    ~cohort_end_date,   1,                     1,           as.Date(\"2020-01-01\"), as.Date(\"2021-01-01\"),   2,                     1,           as.Date(\"2020-01-01\"), as.Date(\"2020-01-20\"),   3,                     1,           as.Date(\"2020-01-22\"), as.Date(\"2020-02-28\"),   4,                     1,           as.Date(\"2020-02-20\"), as.Date(\"2020-03-3\") )  cohort_table ## # A tibble: 4 × 4 ##   cohort_definition_id subject_id cohort_start_date cohort_end_date ##                  <dbl>      <dbl> <date>            <date>          ## 1                    1          1 2020-01-01        2021-01-01      ## 2                    2          1 2020-01-01        2020-01-20      ## 3                    3          1 2020-01-22        2020-02-28      ## 4                    4          1 2020-02-20        2020-03-03 cohort_table <- cohort_table %>%   mutate(duration = as.numeric(cohort_end_date - cohort_start_date))  cohort_table ## # A tibble: 4 × 5 ##   cohort_definition_id subject_id cohort_start_date cohort_end_date duration ##                  <dbl>      <dbl> <date>            <date>             <dbl> ## 1                    1          1 2020-01-01        2021-01-01           366 ## 2                    2          1 2020-01-01        2020-01-20            19 ## 3                    3          1 2020-01-22        2020-02-28            37 ## 4                    4          1 2020-02-20        2020-03-03            12 cohort_table <- cohort_table %>%   # Filter out target cohort   filter(cohort_definition_id != 1) %>%   mutate(overlap = case_when(     # If the result of the next cohort_end_date is NA, set 0     is.na(lead(cohort_end_date)) ~ 0,     # Compute duration of cohort_end_date - next cohort_start_date     # 2020-02-28 - 2020-02-20 = -8     .default = as.numeric(cohort_end_date - lead(cohort_start_date))))  cohort_table ## # A tibble: 3 × 6 ##   cohort_definition_id subject_id cohort_start_date cohort_end_date duration ##                  <dbl>      <dbl> <date>            <date>             <dbl> ## 1                    2          1 2020-01-01        2020-01-20            19 ## 2                    3          1 2020-01-22        2020-02-28            37 ## 3                    4          1 2020-02-20        2020-03-03            12 ## # ℹ 1 more variable: overlap <dbl> 2:   ------------------- 3:                        ------------------------------------- 4:                                                     ------------ 2:   ------------------- 3:                        ----------------------------- 3+4:                                                   -------- 4:                                                             ---- 2:   ------------------- 3:                        -----------------------------  Pathway: 2-3 2:   ------------------- 3:                        ----------------------------- 3+4:                                                   --------  Pathway: 2-3-3+4"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"generic-interface","dir":"Articles","previous_headings":"","what":"Generic interface","title":"Using TreatmentPatterns' Shiny Modules","text":"module 3 methods represent main interface utilize : 1) uiBody, 2) uiMenu, 3) server.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"uibody","dir":"Articles","previous_headings":"Generic interface","what":"uiBody","title":"Using TreatmentPatterns' Shiny Modules","text":"uiBody() method calls body module, can used inside layout like fluidPage() shiny package dashboardPage() shinydashboard package.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"uimenu","dir":"Articles","previous_headings":"Generic interface","what":"uiMenu","title":"Using TreatmentPatterns' Shiny Modules","text":"uiMenu() method calls menu link points toward page generated uiBody(). typically used shinydashboard’s dashboardPage().","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"server","dir":"Articles","previous_headings":"Generic interface","what":"server","title":"Using TreatmentPatterns' Shiny Modules","text":"server() method calls back-end module, handles internal computations, data filtering, file management.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"inputhandler","dir":"Articles","previous_headings":"","what":"InputHandler","title":"Using TreatmentPatterns' Shiny Modules","text":"InputHandler module key methods can used setup TreatmentPatterns shiny application quickly. First need create object class InputHandler like : Now InputHandler initialized ready go, access uiBody() uiMenu() methods build UI . example uiMenu() wrapped inside sidebarMenu() dashboardSidebar(). uiBody() method wrapped inside tabItems() dashboardBody(). also access setDataPath() server() methods. setDataPath() method allows us specify either path zip-file, pass input server function. set path parameter instead, input becomes static. Note, also renders uiBody() uiMenu() methods redundant.  pass input, user can interactively upload zip file.","code":"library(TreatmentPatterns)  inputHandler <- InputHandler$new(\"app\") library(shiny) library(shinydashboard)  inputHandler <- InputHandler$new(\"app\")  ui <- dashboardPage(   header = dashboardHeader(title = \"myApp\"),   sidebar = dashboardSidebar(sidebarMenu(     # InputHandler menu item     inputHandler$uiMenu(),          # Database Selection     inputHandler$uiDatabaseSelector()   )),   body = dashboardBody(tabItems(     # InputHandler body     inputHandler$uiBody()   )) ) server <- function(input, output, session) {   shiny::moduleServer(\"app\", function(input, output, session) {     # Set static path     inputHandler$setDataPath(path = system.file(package = \"TreatmentPatterns\", \"DummyOutput\", \"output.zip\"))     # Run server back-end     inputHandler$server(input, output, session)   }) } shinyApp(ui, server) # Data uploaded by user server <- function(input, output, session) {   shiny::moduleServer(\"app\", function(input, output, session) {     # Set input, for interactive file upload     inputHandler$setDataPath(input = input)     # InputHandler back-end     inputHandler$server(input, output, session)   }) }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"interactiveplots","dir":"Articles","previous_headings":"","what":"InteractivePlots","title":"Using TreatmentPatterns' Shiny Modules","text":"Lets first create InteractivePlots module object. can now add UI calling uiMenu() uiBody() methods. Finally can add server back-end server function. Note server() method InteractivePlots also takes inputHandler module object input.","code":"sunburstPlot <- SunburstPlot$new(\"app\") sankeyDiagram <- SankeyDiagram$new(\"app\") ui <- dashboardPage(   header = dashboardHeader(title = \"myApp\"),   sidebar = dashboardSidebar(sidebarMenu(     # InputHandler menu item     inputHandler$uiMenu(),          # InteractivePlots menu item     sunburstPlot$uiMenu(),     sankeyDiagram$uiMenu(),          # Database Selection     inputHandler$uiDatabaseSelector()   )),   body = dashboardBody(tabItems(     # InputHandler body     inputHandler$uiBody(),          # InteractivePlots body     sunburstPlot$uiBody(),     sankeyDiagram$uiBody()   )) ) server <- function(input, output, session) {   shiny::moduleServer(\"app\", function(input, output, session) {     # Set input, for interactive file upload     inputHandler$setDataPath(path = system.file(package = \"TreatmentPatterns\", \"DummyOutput\", \"output.zip\"))     # InputHandler back-end     inputHandler$server(input, output, session)          # InteracitvePlots back-end     sunburstPlot$server(input, output, session, inputHandler)     sankeyDiagram$server(input, output, session, inputHandler)   }) } shinyApp(ui, server)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/articles/usingTreatmentPatternsShinyModules.html","id":"characterizationplots","dir":"Articles","previous_headings":"","what":"CharacterizationPlots","title":"Using TreatmentPatterns' Shiny Modules","text":"Lets first create CharacterizationPlots module object. can now add UI calling uiMenu() uiBody() methods. Finally can add server back-end server function. Note server() method InteractivePlots also takes inputHandler module object input.","code":"characterizationPlots <- CharacterizationPlots$new(\"app\") ui <- dashboardPage(   header = dashboardHeader(title = \"myApp\"),   sidebar = dashboardSidebar(sidebarMenu(     # InputHandler menu item     inputHandler$uiMenu(),          # InteractivePlots menu item     sunburstPlot$uiMenu(),     sankeyDiagram$uiMenu(),          # CharacterizationPlots menu item     characterizationPlots$uiMenu(),          # Database Selection     inputHandler$uiDatabaseSelector()   )),   body = dashboardBody(tabItems(     # InputHandler body     inputHandler$uiBody(),          # InteractivePlots body     sunburstPlot$uiBody(),     sankeyDiagram$uiBody(),          # CharacterizationPlots body     characterizationPlots$uiBody()   )) ) server <- function(input, output, session) {   shiny::moduleServer(\"app\", function(input, output, session) {     # Set input, for interactive file upload     inputHandler$setDataPath(path = system.file(package = \"TreatmentPatterns\", \"DummyOutput\", \"output.zip\"))     # InputHandler back-end     inputHandler$server(input, output, session)          # InteractivePlots back-end     interactivePlots$server(input, output, session, inputHandler)          # CharacterizationPlots back-end     characterizationPlots$server(input, output, session, inputHandler)   }) } shinyApp(ui, server)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aniek Markus. Author. Maarten van Kessel. Maintainer.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Markus , Verhamme K, Kors J, Rijnbeek P (2022). “TreatmentPatterns: R package facilitate standardized development analysis treatment patterns across disease domains.” Computer Methods Programs Biomedicine. doi:10.1016/j.cmpb.2022.107081, https://doi.org/10.1016/j.cmpb.2022.107081.","code":"@Article{TreatmentPatterns,   title = {TreatmentPatterns: An R package to facilitate the standardized development and analysis of treatment patterns across disease domains},   author = {Aniek F Markus and Katia MC Verhamme and Jan A Kors and Peter R Rijnbeek},   journal = {Computer Methods and Programs in Biomedicine},   year = {2022},   month = {oct},   doi = {10.1016/j.cmpb.2022.107081},   url = {https://doi.org/10.1016/j.cmpb.2022.107081}, }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/index.html","id":"treatmentpatterns","dir":"","previous_headings":"","what":"Analyzes Real-World Treatment Patterns of a Study Population of Interest","title":"Analyzes Real-World Treatment Patterns of a Study Population of Interest","text":"Markus , Verhamme K, Kors J, Rijnbeek P (2022). “TreatmentPatterns: R package facilitate standardized development analysis treatment patterns across disease domains.” Computer Methods Programs Biomedicine. R package contains resources performing treatment pathway analysis study population interest observational databases. package partially relies Observational Medical Outcomes Partnership Common Data Model (OMOP CDM), main parts package also usable different data formats.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Analyzes Real-World Treatment Patterns of a Study Population of Interest","text":"Compatible JSON, SQL, CapR cohorts. Compatible DatabaseConnector, CohortGenerator, CDMConnector. Stratification age, sex, index year. Treatment type agnostic. Duration treatments Overlap treatments Gaps treatments Intermediate patient level results can reviewed, aggregate data can shared. Easily integrate Sankey diagrams sunburst plots (htmlWidget) ShinyApps web-pages.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzes Real-World Treatment Patterns of a Study Population of Interest","text":"can install recently released CRAN version TreatmentPatterns : GitHub : can install development version TreatmentPatterns GitHub :","code":"install.packages(\"TreatmentPatterns\") remotes::install_github(\"darwin-eu-dev/TreatmentPatterns\") install.packages(\"remotes\") remotes::install_github(\"darwin-eu-dev/TreatmentPatterns@dev\")"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"CharacterizationPlots — CharacterizationPlots","title":"CharacterizationPlots — CharacterizationPlots","text":"Class handle characterization plots.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"CharacterizationPlots — CharacterizationPlots","text":"TreatmentPatterns::ShinyModule -> CharacterizationPlots","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"CharacterizationPlots — CharacterizationPlots","text":"TreatmentPatterns::ShinyModule$initialize() TreatmentPatterns::ShinyModule$validate()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"CharacterizationPlots — CharacterizationPlots","text":"CharacterizationPlots$uiMenu() CharacterizationPlots$uiBody() CharacterizationPlots$server() CharacterizationPlots$clone()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"method-uimenu-","dir":"Reference","previous_headings":"","what":"Method uiMenu()","title":"CharacterizationPlots — CharacterizationPlots","text":"Method include menuItem link body.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CharacterizationPlots — CharacterizationPlots","text":"","code":"CharacterizationPlots$uiMenu(   label = \"Characteristics\",   tag = \"characteristics\" )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CharacterizationPlots — CharacterizationPlots","text":"label (character(1)) Label show menuItem. tag (character(1)) Tag use internally input.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"CharacterizationPlots — CharacterizationPlots","text":"(menuItem)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"method-uibody-","dir":"Reference","previous_headings":"","what":"Method uiBody()","title":"CharacterizationPlots — CharacterizationPlots","text":"Method include tabItem include body.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"CharacterizationPlots — CharacterizationPlots","text":"","code":"CharacterizationPlots$uiBody()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"CharacterizationPlots — CharacterizationPlots","text":"(tabItem)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"method-server-","dir":"Reference","previous_headings":"","what":"Method server()","title":"CharacterizationPlots — CharacterizationPlots","text":"Method handle back-end.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"CharacterizationPlots — CharacterizationPlots","text":"","code":"CharacterizationPlots$server(input, output, session, inputHandler)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"CharacterizationPlots — CharacterizationPlots","text":"input (input) Input server function. output (output) Output server function. session (session) Session server function. inputHandler (inputHandler)InputHandler class.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"CharacterizationPlots — CharacterizationPlots","text":"(NULL)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"CharacterizationPlots — CharacterizationPlots","text":"objects class cloneable method.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"CharacterizationPlots — CharacterizationPlots","text":"","code":"CharacterizationPlots$clone(deep = FALSE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/CharacterizationPlots.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"CharacterizationPlots — CharacterizationPlots","text":"deep Whether make deep clone.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"InputHandler — InputHandler","title":"InputHandler — InputHandler","text":"Class handle input user. Supports direct paths input fields setDataPath().","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"InputHandler — InputHandler","text":"TreatmentPatterns::ShinyModule -> InputHandler","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"InputHandler — InputHandler","text":"reactiveValues (reactiveValues) reactiveValues class created reactiveValues.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"InputHandler — InputHandler","text":"TreatmentPatterns::ShinyModule$initialize() TreatmentPatterns::ShinyModule$validate()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InputHandler — InputHandler","text":"InputHandler$uiMenu() InputHandler$uiBody() InputHandler$server() InputHandler$uiDatabaseSelector() InputHandler$setDataPath() InputHandler$clone()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"method-uimenu-","dir":"Reference","previous_headings":"","what":"Method uiMenu()","title":"InputHandler — InputHandler","text":"Method include menuItem link body.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InputHandler — InputHandler","text":"","code":"InputHandler$uiMenu(label = \"File upload\", tag = \"fileUpload\")"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputHandler — InputHandler","text":"label (character(1)) Label show menuItem. tag (character(1)) Tag use internally input.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"InputHandler — InputHandler","text":"(menuItem)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"method-uibody-","dir":"Reference","previous_headings":"","what":"Method uiBody()","title":"InputHandler — InputHandler","text":"Method include tabItem include body.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InputHandler — InputHandler","text":"","code":"InputHandler$uiBody()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"InputHandler — InputHandler","text":"(tabItem)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"method-server-","dir":"Reference","previous_headings":"","what":"Method server()","title":"InputHandler — InputHandler","text":"Method handle back-end.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InputHandler — InputHandler","text":"","code":"InputHandler$server(input, output, session)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputHandler — InputHandler","text":"input (input) Input server function. output (output) Output server function. session (session) Session server function.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"InputHandler — InputHandler","text":"(NULL)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"method-uidatabaseselector-","dir":"Reference","previous_headings":"","what":"Method uiDatabaseSelector()","title":"InputHandler — InputHandler","text":"Method include uiOutput select multiple uploaded files.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InputHandler — InputHandler","text":"","code":"InputHandler$uiDatabaseSelector()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"InputHandler — InputHandler","text":"(uiOutput)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"method-setdatapath-","dir":"Reference","previous_headings":"","what":"Method setDataPath()","title":"InputHandler — InputHandler","text":"Method dictate data coming , either input shiny application, specified path. one provided, ignored.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InputHandler — InputHandler","text":"","code":"InputHandler$setDataPath(tag = \"uploadField\", input = NULL, path = NULL)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputHandler — InputHandler","text":"tag (character(1)) Tag use internally input. input (input) Input server function shiny app. path (character(1)) Path zip-file containing TreatmentPatterns output files.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"InputHandler — InputHandler","text":"(invisible(self))","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InputHandler — InputHandler","text":"objects class cloneable method.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InputHandler — InputHandler","text":"","code":"InputHandler$clone(deep = FALSE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/InputHandler.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputHandler — InputHandler","text":"deep Whether make deep clone.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":null,"dir":"Reference","previous_headings":"","what":"SankeyDiagram — SankeyDiagram","title":"SankeyDiagram — SankeyDiagram","text":"Class handle Sankey diagram TreatmentPatterns.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SankeyDiagram — SankeyDiagram","text":"TreatmentPatterns::ShinyModule -> TreatmentPatterns::InteracitvePlot -> SankeyDiagram","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SankeyDiagram — SankeyDiagram","text":"TreatmentPatterns::ShinyModule$validate() TreatmentPatterns::InteracitvePlot$initialize() TreatmentPatterns::InteracitvePlot$server() TreatmentPatterns::InteracitvePlot$uiBody() TreatmentPatterns::InteracitvePlot$uiMenu()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SankeyDiagram — SankeyDiagram","text":"SankeyDiagram$clone()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SankeyDiagram — SankeyDiagram","text":"objects class cloneable method.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SankeyDiagram — SankeyDiagram","text":"","code":"SankeyDiagram$clone(deep = FALSE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SankeyDiagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SankeyDiagram — SankeyDiagram","text":"deep Whether make deep clone.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":null,"dir":"Reference","previous_headings":"","what":"ShinyModule — ShinyModule","title":"ShinyModule — ShinyModule","text":"ShinyModule super class","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"ShinyModule — ShinyModule","text":"namespace Namespace module.","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ShinyModule — ShinyModule","text":"ShinyModule$new() ShinyModule$validate() ShinyModule$uiMenu() ShinyModule$uiBody() ShinyModule$server() ShinyModule$clone()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ShinyModule — ShinyModule","text":"Initializer method","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ShinyModule — ShinyModule","text":"","code":"ShinyModule$new(namespace)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ShinyModule — ShinyModule","text":"namespace (character(1))","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ShinyModule — ShinyModule","text":"(invisible(self))","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"method-validate-","dir":"Reference","previous_headings":"","what":"Method validate()","title":"ShinyModule — ShinyModule","text":"Validator method","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ShinyModule — ShinyModule","text":"","code":"ShinyModule$validate()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ShinyModule — ShinyModule","text":"(invisible(self))","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"method-uimenu-","dir":"Reference","previous_headings":"","what":"Method uiMenu()","title":"ShinyModule — ShinyModule","text":"Method include menuItem link body.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ShinyModule — ShinyModule","text":"","code":"ShinyModule$uiMenu(label, tag)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ShinyModule — ShinyModule","text":"label (character(1)) Label show menuItem. tag (character(1)) Tag use internally input.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ShinyModule — ShinyModule","text":"(menuItem)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"method-uibody-","dir":"Reference","previous_headings":"","what":"Method uiBody()","title":"ShinyModule — ShinyModule","text":"Method include tabItem include body.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ShinyModule — ShinyModule","text":"","code":"ShinyModule$uiBody()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"ShinyModule — ShinyModule","text":"(tabItem)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"method-server-","dir":"Reference","previous_headings":"","what":"Method server()","title":"ShinyModule — ShinyModule","text":"Method handle back-end.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ShinyModule — ShinyModule","text":"","code":"ShinyModule$server(input, output, session)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ShinyModule — ShinyModule","text":"input (input) Input server function. output (output) Output server function. session (session) Session server function.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"ShinyModule — ShinyModule","text":"(NULL)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ShinyModule — ShinyModule","text":"objects class cloneable method.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ShinyModule — ShinyModule","text":"","code":"ShinyModule$clone(deep = FALSE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/ShinyModule.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ShinyModule — ShinyModule","text":"deep Whether make deep clone.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"SunburstPlot — SunburstPlot","title":"SunburstPlot — SunburstPlot","text":"Class handle Sunburst plot TreatmentPatterns.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SunburstPlot — SunburstPlot","text":"TreatmentPatterns::ShinyModule -> TreatmentPatterns::InteracitvePlot -> SunburstPlot","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SunburstPlot — SunburstPlot","text":"TreatmentPatterns::ShinyModule$validate() TreatmentPatterns::InteracitvePlot$initialize() TreatmentPatterns::InteracitvePlot$server() TreatmentPatterns::InteracitvePlot$uiBody() TreatmentPatterns::InteracitvePlot$uiMenu()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SunburstPlot — SunburstPlot","text":"SunburstPlot$clone()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SunburstPlot — SunburstPlot","text":"objects class cloneable method.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SunburstPlot — SunburstPlot","text":"","code":"SunburstPlot$clone(deep = FALSE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/SunburstPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SunburstPlot — SunburstPlot","text":"deep Whether make deep clone.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatterns-package.html","id":null,"dir":"Reference","previous_headings":"","what":"TreatmentPatterns: Analyzes Real-World Treatment Patterns of a Study Population of Interest — TreatmentPatterns-package","title":"TreatmentPatterns: Analyzes Real-World Treatment Patterns of a Study Population of Interest — TreatmentPatterns-package","text":"Computes treatment patterns within given cohort using Observational Medical Outcomes Partnership (OMOP) common data model (CDM). described Markus, Verhamme, Kors, Rijnbeek (2022) doi:10.1016/j.cmpb.2022.107081 .","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatterns-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TreatmentPatterns: Analyzes Real-World Treatment Patterns of a Study Population of Interest — TreatmentPatterns-package","text":"Maintainer: Maarten van Kessel m.l.vankessel@erasmusmc.nl (ORCID) Authors: Aniek Markus (ORCID)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":null,"dir":"Reference","previous_headings":"","what":"TreatmentPatternsResults Class — TreatmentPatternsResults","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Houses results TreatmentPatterns analysis. field corresponds file. Plotting methods provided.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"attrition (data.frame) metadata (data.frame) treatment_pathways (data.frame) summary_event_duration (data.frame) counts_age (data.frame) counts_sex (data.frame) counts_year (data.frame) cdm_source_info (data.frame) analyses (data.frame) arguments (list)","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"TreatmentPatternsResults$new() TreatmentPatternsResults$saveAsZip() TreatmentPatternsResults$saveAsCsv() TreatmentPatternsResults$uploadResultsToDb() TreatmentPatternsResults$load() TreatmentPatternsResults$plotSunburst() TreatmentPatternsResults$plotSankey() TreatmentPatternsResults$plotEventDuration() TreatmentPatternsResults$clone()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Initializer method","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$new(   attrition = NULL,   metadata = NULL,   treatmentPathways = NULL,   summaryEventDuration = NULL,   countsAge = NULL,   countsSex = NULL,   countsYear = NULL,   cdmSourceInfo = NULL,   analyses = NULL,   arguments = NULL,   filePath = NULL )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"attrition (data.frame) attrition result. metadata (data.frame)) metadata result. treatmentPathways (data.frame)) treatmentPathways result. summaryEventDuration (data.frame)) summaryEventDuration result. countsAge (data.frame)) countsAge result. countsSex (data.frame)) countsSex result. countsYear (data.frame)) countsYear result. cdmSourceInfo (data.frame) cdmSourceInfo result. analyses (data.frame) Analyses result. arguments (list) Named list arguments used. filePath (character) File path either directory zip-file, containing csv-files.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-saveaszip-","dir":"Reference","previous_headings":"","what":"Method saveAsZip()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Save results zip-file.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$saveAsZip(path, name, verbose = TRUE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"path (character(1)) Path write . name (character(1)) File name. verbose (logical: TRUE) Verbose messaging.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"self","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-saveascsv-","dir":"Reference","previous_headings":"","what":"Method saveAsCsv()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Save results csv-files.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$saveAsCsv(path, verbose = TRUE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"path (character(1)) Path write . verbose (logical: TRUE) Verbose messaging.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"self","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-uploadresultstodb-","dir":"Reference","previous_headings":"","what":"Method uploadResultsToDb()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Upload results resultsDatabase using ResultModelManager.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$uploadResultsToDb(   connectionDetails,   schema,   prefix = \"tp_\",   overwrite = TRUE,   purgeSiteDataBeforeUploading = FALSE )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"connectionDetails (ConnectionDetails) ConnectionDetails object DatabaseConnector. schema (character(1)) Schema write tables . prefix (character(1): \"tp_\") Table prefix. overwrite (logical(1): TRUE) tables overwritten? purgeSiteDataBeforeUploading (logical: FALSE) site data purged uploading?","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"self","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-load-","dir":"Reference","previous_headings":"","what":"Method load()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Load data files.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$load(filePath)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"filePath (character(1)) Path directory zip-file containing result csv-files.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"self","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-plotsunburst-","dir":"Reference","previous_headings":"","what":"Method plotSunburst()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Wrapper TreatmentPatterns::createSunburstPlot(), data filtering step.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$plotSunburst(   age = \"all\",   sex = \"all\",   indexYear = \"all\",   nonePaths = FALSE,   ... )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"age (character(1)) Age group. sex (character(1)) Sex group. indexYear (character(1)) Index year group. nonePaths (logical(1)) None paths included? ... Parameters TreatmentPatterns::createSunburstPlot()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"htmlwidget","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-plotsankey-","dir":"Reference","previous_headings":"","what":"Method plotSankey()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Wrapper TreatmentPatterns::createSankeyDiagram(), data filtering step.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$plotSankey(   age = \"all\",   sex = \"all\",   indexYear = \"all\",   nonePaths = FALSE,   ... )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"age (character(1)) Age group. sex (character(1)) Sex group. indexYear (character(1)) Index year group. nonePaths (logical(1)) None paths included? ... Parameters TreatmentPatterns::createSankeyDiagram()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"htmlwidget","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-ploteventduration-","dir":"Reference","previous_headings":"","what":"Method plotEventDuration()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"Wrapper TreatmentPatterns::plotEventDuration().","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$plotEventDuration(...)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"... Parameters TreatmentPatterns::plotEventDuration()","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"ggplot","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"objects class cloneable method.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"","code":"TreatmentPatternsResults$clone(deep = FALSE)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/TreatmentPatternsResults.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreatmentPatternsResults Class — TreatmentPatternsResults","text":"deep Whether make deep clone.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/computePathways.html","id":null,"dir":"Reference","previous_headings":"","what":"computePathways — computePathways","title":"computePathways — computePathways","text":"Compute treatment patterns according specified parameters within specified cohorts.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/computePathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"computePathways — computePathways","text":"","code":"computePathways(   cohorts,   cohortTableName,   cdm = NULL,   connectionDetails = NULL,   cdmSchema = NULL,   resultSchema = NULL,   analysisId = 1,   description = \"\",   tempEmulationSchema = NULL,   includeTreatments = \"startDate\",   indexDateOffset = 0,   minEraDuration = 0,   splitEventCohorts = NULL,   splitTime = NULL,   eraCollapseSize = 30,   combinationWindow = 30,   minPostCombinationDuration = 30,   filterTreatments = \"First\",   maxPathLength = 5 )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/computePathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"computePathways — computePathways","text":"cohorts (data.frame()) Data frame containing following columns data types: cohortId numeric(1) Cohort ID's cohorts used cohort table. cohortName character(1) Cohort names cohorts used cohort table. type character(1) [\"target\", \"event', \"exit\"] Cohort type, describing cohort target, event, exit cohort cohortTableName (character(1)) Cohort table name. cdm (CDMConnector::cdm_from_con(): NULL) Optional; Ignores connectionDetails, cdmSchema, resultSchema. connectionDetails (DatabaseConnector::createConnectionDetails(): NULL) Optional; congruence cdmSchema resultSchema. Ignores cdm. cdmSchema (character(1): NULL) Optional; congruence connectionDetails resultSchema. Ignores cdm. resultSchema (character(1): NULL) Optional; congruence connectionDetails cdmSchema. Ignores cdm. analysisId (character(1)) Identifier TreatmentPatterns analysis. description (character(1)) Description analysis. tempEmulationSchema Schema used emulate temp tables includeTreatments (character(1): \"startDate\") \"startDate\" Include treatments target cohort start date onwards. \"endDate\" Include treatments target cohort end date . indexDateOffset (integer(1): 0) Offset index date Target cohort. minEraDuration (integer(1): 0) Minimum time event era last included analysis splitEventCohorts (character(n): \"\") Specify event cohort split acute (< X days) therapy (>= X days) splitTime (integer(1): 30) Specify number days (X) split event cohorts split acute therapy eraCollapseSize (integer(1): 30) Window time two eras event cohort collapsed one era combinationWindow (integer(1): 30) Window time two event cohorts need overlap considered combination treatment minPostCombinationDuration (integer(1): 30) Minimum time event era generated combination treatment last included analysis filterTreatments (character(1): \"First\" [\"first\", \"Changes\", \"\"]) Select first occurrence (‘First’); changes (‘Changes’); event cohorts (‘’). maxPathLength (integer(1): 5) Maximum number steps included treatment pathway","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/computePathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"computePathways — computePathways","text":"(Andromeda::andromeda()) andromeda object containing non-sharable patient level data outcomes.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/computePathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"computePathways — computePathways","text":"","code":"# \\donttest{ ableToRun <- all(   require(\"CirceR\", character.only = TRUE, quietly = TRUE),   require(\"CDMConnector\", character.only = TRUE, quietly = TRUE),   require(\"TreatmentPatterns\", character.only = TRUE, quietly = TRUE),   require(\"dplyr\", character.only = TRUE, quietly = TRUE) ) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  if (ableToRun) {   library(TreatmentPatterns)   library(CDMConnector)   library(dplyr)    withr::local_envvar(     R_USER_CACHE_DIR = tempfile(),     EUNOMIA_DATA_FOLDER = Sys.getenv(\"EUNOMIA_DATA_FOLDER\", unset = tempfile())   )    tryCatch({     if (Sys.getenv(\"skip_eunomia_download_test\") != \"TRUE\") {       CDMConnector::downloadEunomiaData(overwrite = TRUE)     }   }, error = function(e) NA)    con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir())   cdm <- cdmFromCon(con, cdmSchema = \"main\", writeSchema = \"main\")    cohortSet <- readCohortSet(     path = system.file(package = \"TreatmentPatterns\", \"exampleCohorts\")   )    cdm <- generateCohortSet(     cdm = cdm,     cohortSet = cohortSet,     name = \"cohort_table\"   )    cohorts <- cohortSet %>%     # Remove 'cohort' and 'json' columns     select(-\"cohort\", -\"json\") %>%     mutate(type = c(\"event\", \"event\", \"event\", \"event\", \"exit\", \"event\", \"event\", \"target\")) %>%     rename(       cohortId = \"cohort_definition_id\",       cohortName = \"cohort_name\",     ) %>%     select(\"cohortId\", \"cohortName\", \"type\")    outputEnv <- computePathways(     cohorts = cohorts,     cohortTableName = \"cohort_table\",     cdm = cdm   )    Andromeda::close(outputEnv)   DBI::dbDisconnect(con, shutdown = TRUE) } #>  #> Download completed! #> Warning: `eunomia_dir()` was deprecated in CDMConnector 1.7.0. #> ℹ Please use `eunomiaDir()` instead. #> Creating CDM database /tmp/RtmpyyYHVN/file2d617fc4b2c/GiBleed_5.3.zip #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid #> ! cdm name not specified and could not be inferred from the cdm source table #> ℹ Generating 8 cohorts #> ℹ Generating cohort (1/8) - acetaminophen #> ✔ Generating cohort (1/8) - acetaminophen [351ms] #>  #> ℹ Generating cohort (2/8) - amoxicillin #> ✔ Generating cohort (2/8) - amoxicillin [186ms] #>  #> ℹ Generating cohort (3/8) - aspirin #> ✔ Generating cohort (3/8) - aspirin [155ms] #>  #> ℹ Generating cohort (4/8) - clavulanate #> ✔ Generating cohort (4/8) - clavulanate [157ms] #>  #> ℹ Generating cohort (5/8) - death #> ✔ Generating cohort (5/8) - death [118ms] #>  #> ℹ Generating cohort (6/8) - doxylamine #> ✔ Generating cohort (6/8) - doxylamine [144ms] #>  #> ℹ Generating cohort (7/8) - penicillinv #> ✔ Generating cohort (7/8) - penicillinv [155ms] #>  #> ℹ Generating cohort (8/8) - viralsinusitis #> ✔ Generating cohort (8/8) - viralsinusitis [224ms] #>  #> -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 #> \tRecords: 14041 #> \tSubjects: 2693 #> -- Removing records < minEraDuration (0) #> \tRecords: 11386 #> \tSubjects: 2159 #> >> Starting on target: 8 (viralsinusitis) #> -- Removing events where index date < target index date + indexDateOffset (0) #> \tRecords: 8381 #> \tSubjects: 2159 #> -- splitEventCohorts #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Collapsing eras, eraCollapse (30) #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 558 #> \tSubjects: 512 #> -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 554 #> \tSubjects: 512 #> -- After Combination #> \tRecords: 554 #> \tSubjects: 512 #> -- filterTreatments (First) #> \tRecords: 553 #> \tSubjects: 512 #> -- treatment construction done #> \tRecords: 553 #> \tSubjects: 512 # }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSankeyDiagram.html","id":null,"dir":"Reference","previous_headings":"","what":"createSankeyDiagram — createSankeyDiagram","title":"createSankeyDiagram — createSankeyDiagram","text":"Create sankey diagram.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSankeyDiagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"createSankeyDiagram — createSankeyDiagram","text":"","code":"createSankeyDiagram(   treatmentPathways,   groupCombinations = FALSE,   colors = NULL,   ... )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSankeyDiagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"createSankeyDiagram — createSankeyDiagram","text":"treatmentPathways (data.frame()) contents treatmentPathways.csv-file data.frame(). groupCombinations (logical(1): FALSE) TRUE Group combination treatments category \"Combination\". FALSE group combination treatments. colors (character(n)) Vector hex color codes. ... Paramaters sankeyNetwork.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSankeyDiagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"createSankeyDiagram — createSankeyDiagram","text":"(htmlwidget)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSankeyDiagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"createSankeyDiagram — createSankeyDiagram","text":"","code":"# Dummy data, typically read from treatmentPathways.csv treatmentPathways <- data.frame(   pathway = c(\"Acetaminophen\", \"Acetaminophen-Amoxicillin+Clavulanate\",            \"Acetaminophen-Aspirin\", \"Amoxicillin+Clavulanate\", \"Aspirin\"),   freq = c(206, 6, 14, 48, 221),   sex = rep(\"all\", 5),   age = rep(\"all\", 5),   index_year = rep(\"all\", 5) )  createSankeyDiagram(treatmentPathways)  {\"x\":{\"links\":{\"source\":[0,0,0,1,2],\"target\":[3,4,5,5,5],\"value\":[1.21,2.83,41.62,9.699999999999999,44.65]},\"nodes\":{\"name\":[\"1.Acetaminophen\",\"1.Amoxicillin+Clavulanate\",\"1.Aspirin\",\"2.Amoxicillin+Clavulanate\",\"2.Aspirin\",\"2.Stopped\"],\"group\":[\"1.Acetaminophen\",\"1.Amoxicillin+Clavulanate\",\"1.Aspirin\",\"2.Amoxicillin+Clavulanate\",\"2.Aspirin\",\"2.Stopped\"]},\"options\":{\"NodeID\":\"names\",\"NodeGroup\":\"names\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal(d3.schemeCategory20)\",\"fontSize\":7,\"fontFamily\":null,\"nodeWidth\":15,\"nodePadding\":10,\"units\":\"%\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":true}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSunburstPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"createSunburstPlot — createSunburstPlot","title":"createSunburstPlot — createSunburstPlot","text":"New sunburstPlot function","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSunburstPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"createSunburstPlot — createSunburstPlot","text":"","code":"createSunburstPlot(treatmentPathways, groupCombinations = FALSE, ...)"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSunburstPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"createSunburstPlot — createSunburstPlot","text":"treatmentPathways (data.frame()) contents treatmentPathways.csv-file data.frame(). groupCombinations (logical(1): FALSE) TRUE Group combination treatments category \"Combination\". FALSE group combination treatments. ... Paramaters sunburst.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSunburstPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"createSunburstPlot — createSunburstPlot","text":"(htmlwidget)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/createSunburstPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"createSunburstPlot — createSunburstPlot","text":"","code":"# Dummy data, typically read from treatmentPathways.csv treatmentPatwhays <- data.frame(   pathway = c(\"Acetaminophen\", \"Acetaminophen-Amoxicillin+Clavulanate\",            \"Acetaminophen-Aspirin\", \"Amoxicillin+Clavulanate\", \"Aspirin\"),   freq = c(206, 6, 14, 48, 221),   sex = rep(\"all\", 5),   age = rep(\"all\", 5),   index_year = rep(\"all\", 5) )  createSunburstPlot(treatmentPatwhays)                                                        Legend                 {\"x\":{\"data\":{\"children\":[{\"name\":\"Acetaminophen\",\"children\":[{\"name\":\"Amoxicillin+Clavulanate\",\"size\":6,\"colname\":\"X2\"},{\"name\":\"Aspirin\",\"size\":14,\"colname\":\"X2\"}],\"size\":206,\"colname\":\"X1\"},{\"name\":\"Amoxicillin+Clavulanate\",\"children\":[],\"size\":48,\"colname\":\"X1\"},{\"name\":\"Aspirin\",\"children\":[],\"size\":221,\"colname\":\"X1\"}],\"name\":\"root\"},\"options\":{\"legendOrder\":null,\"colors\":null,\"valueField\":\"size\",\"percent\":true,\"count\":false,\"explanation\":null,\"breadcrumb\":[],\"legend\":[],\"sortFunction\":\"function (a, b) {return a.value - b.value;}\",\"sumNodes\":true}},\"evals\":[\"options.sortFunction\"],\"jsHooks\":[]}"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/executeTreatmentPatterns.html","id":null,"dir":"Reference","previous_headings":"","what":"executeTreatmentPatterns — executeTreatmentPatterns","title":"executeTreatmentPatterns — executeTreatmentPatterns","text":"Compute treatment patterns according specified parameters within specified cohorts. customization, investigation patient level outcomes, can run computePathways export separately.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/executeTreatmentPatterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"executeTreatmentPatterns — executeTreatmentPatterns","text":"","code":"executeTreatmentPatterns(   cohorts,   cohortTableName,   cdm = NULL,   connectionDetails = NULL,   cdmSchema = NULL,   resultSchema = NULL,   tempEmulationSchema = NULL,   minEraDuration = 0,   eraCollapseSize = 30,   combinationWindow = 30,   minCellCount = 5 )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/executeTreatmentPatterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"executeTreatmentPatterns — executeTreatmentPatterns","text":"cohorts (data.frame()) Data frame containing following columns data types: cohortId numeric(1) Cohort ID's cohorts used cohort table. cohortName character(1) Cohort names cohorts used cohort table. type character(1) [\"target\", \"event', \"exit\"] Cohort type, describing cohort target, event, exit cohort cohortTableName (character(1)) Cohort table name. cdm (CDMConnector::cdm_from_con(): NULL) Optional; Ignores connectionDetails, cdmSchema, resultSchema. connectionDetails (DatabaseConnector::createConnectionDetails(): NULL) Optional; congruence cdmSchema resultSchema. Ignores cdm. cdmSchema (character(1): NULL) Optional; congruence connectionDetails resultSchema. Ignores cdm. resultSchema (character(1): NULL) Optional; congruence connectionDetails cdmSchema. Ignores cdm. tempEmulationSchema (character(1)) Schema emulate temp tables. minEraDuration (integer(1): 0) Minimum time event era last included analysis eraCollapseSize (integer(1): 30) Window time two eras event cohort collapsed one era combinationWindow (integer(1): 30) Window time two event cohorts need overlap considered combination treatment minCellCount (integer(1): 5) Minimum count required per pathway. Censors data x <x. minimum value carry sankey diagram sunburst plot.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/executeTreatmentPatterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"executeTreatmentPatterns — executeTreatmentPatterns","text":"TreatmentPatternsResults","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/executeTreatmentPatterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"executeTreatmentPatterns — executeTreatmentPatterns","text":"","code":"# \\donttest{ ableToRun <- all(   require(\"CirceR\", character.only = TRUE, quietly = TRUE),   require(\"CDMConnector\", character.only = TRUE, quietly = TRUE),   require(\"TreatmentPatterns\", character.only = TRUE, quietly = TRUE),   require(\"dplyr\", character.only = TRUE, quietly = TRUE) )  if (require(\"CirceR\", character.only = TRUE, quietly = TRUE)) {   library(TreatmentPatterns)   library(CDMConnector)   library(dplyr)    withr::local_envvar(     R_USER_CACHE_DIR = tempfile(),     EUNOMIA_DATA_FOLDER = Sys.getenv(\"EUNOMIA_DATA_FOLDER\", unset = tempfile())   )    tryCatch({     if (Sys.getenv(\"skip_eunomia_download_test\") != \"TRUE\") {       CDMConnector::downloadEunomiaData(overwrite = TRUE)     }   },   error = function(e) NA)    con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir())   cdm <- cdmFromCon(con, cdmSchema = \"main\", writeSchema = \"main\")    cohortSet <- readCohortSet(     path = system.file(package = \"TreatmentPatterns\", \"exampleCohorts\")   )    cdm <- generateCohortSet(     cdm = cdm,     cohortSet = cohortSet,     name = \"cohort_table\"   )    cohorts <- cohortSet %>%     # Remove 'cohort' and 'json' columns     select(-\"cohort\", -\"json\") %>%     mutate(type = c(\"event\", \"event\", \"event\", \"event\", \"exit\", \"event\", \"event\", \"target\")) %>%     rename(       cohortId = \"cohort_definition_id\",       cohortName = \"cohort_name\",     ) %>%     select(\"cohortId\", \"cohortName\", \"type\")    executeTreatmentPatterns(     cohorts = cohorts,     cohortTableName = \"cohort_table\",     cdm = cdm   )        DBI::dbDisconnect(con, shutdown = TRUE) } #>  #> Download completed! #> Creating CDM database /tmp/RtmpyyYHVN/file2d6142ad89b5/GiBleed_5.3.zip #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid #> ! cdm name not specified and could not be inferred from the cdm source table #> ℹ Generating 8 cohorts #> ℹ Generating cohort (1/8) - acetaminophen #> ✔ Generating cohort (1/8) - acetaminophen [174ms] #>  #> ℹ Generating cohort (2/8) - amoxicillin #> ✔ Generating cohort (2/8) - amoxicillin [152ms] #>  #> ℹ Generating cohort (3/8) - aspirin #> ✔ Generating cohort (3/8) - aspirin [139ms] #>  #> ℹ Generating cohort (4/8) - clavulanate #> ✔ Generating cohort (4/8) - clavulanate [156ms] #>  #> ℹ Generating cohort (5/8) - death #> ✔ Generating cohort (5/8) - death [114ms] #>  #> ℹ Generating cohort (6/8) - doxylamine #> ✔ Generating cohort (6/8) - doxylamine [143ms] #>  #> ℹ Generating cohort (7/8) - penicillinv #> ✔ Generating cohort (7/8) - penicillinv [139ms] #>  #> ℹ Generating cohort (8/8) - viralsinusitis #> ✔ Generating cohort (8/8) - viralsinusitis [215ms] #>  #> -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 #> \tRecords: 14041 #> \tSubjects: 2693 #> -- Removing records < minEraDuration (0) #> \tRecords: 11386 #> \tSubjects: 2159 #> >> Starting on target: 8 (viralsinusitis) #> -- Removing events where index date < target index date + indexDateOffset (0) #> \tRecords: 8381 #> \tSubjects: 2159 #> -- splitEventCohorts #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Collapsing eras, eraCollapse (30) #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 558 #> \tSubjects: 512 #> -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 554 #> \tSubjects: 512 #> -- After Combination #> \tRecords: 554 #> \tSubjects: 512 #> -- filterTreatments (First) #> \tRecords: 553 #> \tSubjects: 512 #> -- treatment construction done #> \tRecords: 553 #> \tSubjects: 512 #> Censoring 1540 pathways with a frequency <5 to mean. # }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"export — export","title":"export — export","text":"Export andromeda generated computePathways object sharable csv-files /zip archive.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"export — export","text":"","code":"export(   andromeda,   outputPath = NULL,   ageWindow = 10,   minCellCount = 5,   censorType = \"minCellCount\",   archiveName = NULL,   nonePaths = FALSE,   stratify = FALSE )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"export — export","text":"andromeda (Andromeda::andromeda()) Andromeda object. outputPath (character: NULL) Output path write output files . set NULL files written, results object returned. ageWindow (integer(n): 10) Number years bin age groups . may also vector integers. .e. c(0, 18, 150) results age group 0-18 includes subjects < 19. age group 18-150 includes subjects > 18. minCellCount (integer(1): 5) Minimum count required per pathway. Censors data x <x. minimum value carry sankey diagram sunburst plot. censorType (character(1)) \"minCellCount\" Censors pathways <minCellCount minCellCount. \"remove\" Censors pathways <minCellCount removing completely. \"mean\" Censors pathways <minCellCount mean frequencies minCellCount archiveName (character(1): NULL) NULL adds exported files ZIP-file specified archive name. nonePaths (logical(1)) None paths included? fetch persons included target cohort assign \"None\" pathway. Significantly impacts performance. stratify (logical(1)) pathways stratified? perform pairwise stratification age, sex, index year. Significantly impacts performance.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"export — export","text":"TreatmentPatternsResults object","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"export — export","text":"","code":"# \\donttest{ ableToRun <- all(   require(\"CirceR\", character.only = TRUE, quietly = TRUE),   require(\"CDMConnector\", character.only = TRUE, quietly = TRUE),   require(\"TreatmentPatterns\", character.only = TRUE, quietly = TRUE),   require(\"dplyr\", character.only = TRUE, quietly = TRUE) )  if (ableToRun) {   library(TreatmentPatterns)   library(CDMConnector)   library(dplyr)    withr::local_envvar(     R_USER_CACHE_DIR = tempfile(),     EUNOMIA_DATA_FOLDER = Sys.getenv(\"EUNOMIA_DATA_FOLDER\", unset = tempfile())   )    tryCatch({     if (Sys.getenv(\"skip_eunomia_download_test\") != \"TRUE\") {       CDMConnector::downloadEunomiaData(overwrite = TRUE)     }   }, error = function(e) NA)    con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir())   cdm <- cdmFromCon(con, cdmSchema = \"main\", writeSchema = \"main\")    cohortSet <- readCohortSet(     path = system.file(package = \"TreatmentPatterns\", \"exampleCohorts\")   )    cdm <- generateCohortSet(     cdm = cdm,     cohortSet = cohortSet,     name = \"cohort_table\"   )    cohorts <- cohortSet %>%     # Remove 'cohort' and 'json' columns     select(-\"cohort\", -\"json\") %>%     mutate(type = c(\"event\", \"event\", \"event\", \"event\", \"exit\", \"event\", \"event\", \"target\")) %>%     rename(       cohortId = \"cohort_definition_id\",       cohortName = \"cohort_name\",     ) %>%     select(\"cohortId\", \"cohortName\", \"type\")    outputEnv <- computePathways(     cohorts = cohorts,     cohortTableName = \"cohort_table\",     cdm = cdm   )    results <- export(     andromeda = outputEnv   )    Andromeda::close(outputEnv)   DBI::dbDisconnect(con, shutdown = TRUE) } #>  #> Download completed! #> Creating CDM database /tmp/RtmpyyYHVN/file2d617658c34a/GiBleed_5.3.zip #> ! cdm name not specified and could not be inferred from the cdm source table #> ℹ Generating 8 cohorts #> ℹ Generating cohort (1/8) - acetaminophen #> ✔ Generating cohort (1/8) - acetaminophen [169ms] #>  #> ℹ Generating cohort (2/8) - amoxicillin #> ✔ Generating cohort (2/8) - amoxicillin [144ms] #>  #> ℹ Generating cohort (3/8) - aspirin #> ✔ Generating cohort (3/8) - aspirin [150ms] #>  #> ℹ Generating cohort (4/8) - clavulanate #> ✔ Generating cohort (4/8) - clavulanate [144ms] #>  #> ℹ Generating cohort (5/8) - death #> ✔ Generating cohort (5/8) - death [126ms] #>  #> ℹ Generating cohort (6/8) - doxylamine #> ✔ Generating cohort (6/8) - doxylamine [138ms] #>  #> ℹ Generating cohort (7/8) - penicillinv #> ✔ Generating cohort (7/8) - penicillinv [149ms] #>  #> ℹ Generating cohort (8/8) - viralsinusitis #> ✔ Generating cohort (8/8) - viralsinusitis [211ms] #>  #> -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 #> \tRecords: 14041 #> \tSubjects: 2693 #> -- Removing records < minEraDuration (0) #> \tRecords: 11386 #> \tSubjects: 2159 #> >> Starting on target: 8 (viralsinusitis) #> -- Removing events where index date < target index date + indexDateOffset (0) #> \tRecords: 8381 #> \tSubjects: 2159 #> -- splitEventCohorts #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Collapsing eras, eraCollapse (30) #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 558 #> \tSubjects: 512 #> -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 554 #> \tSubjects: 512 #> -- After Combination #> \tRecords: 554 #> \tSubjects: 512 #> -- filterTreatments (First) #> \tRecords: 553 #> \tSubjects: 512 #> -- treatment construction done #> \tRecords: 553 #> \tSubjects: 512 # }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/getResultsDataModelSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"getResultsDataModelSpecifications — getResultsDataModelSpecifications","title":"getResultsDataModelSpecifications — getResultsDataModelSpecifications","text":"Gets results data model specifications TreatmentPatterns.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/getResultsDataModelSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getResultsDataModelSpecifications — getResultsDataModelSpecifications","text":"","code":"getResultsDataModelSpecifications()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/getResultsDataModelSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getResultsDataModelSpecifications — getResultsDataModelSpecifications","text":"data.frame","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/getResultsDataModelSpecifications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getResultsDataModelSpecifications — getResultsDataModelSpecifications","text":"","code":"{ getResultsDataModelSpecifications() } #>                 tableName                     columnName dataType isRequired #> 1               attrition                 number_records      int        yes #> 2               attrition                number_subjects      int        yes #> 3               attrition                      reason_id      int        yes #> 4               attrition                         reason  varchar        yes #> 5               attrition                           time   bigint        yes #> 6               attrition                    analysis_id      int        yes #> 7              counts_age                            age      int        yes #> 8              counts_age                              n  varchar        yes #> 9              counts_age                    analysis_id      int        yes #> 10             counts_sex                            sex  varchar        yes #> 11             counts_sex                              n  varchar        yes #> 12             counts_sex                    analysis_id      int        yes #> 13            counts_year                           year      int        yes #> 14            counts_year                              n  varchar        yes #> 15            counts_year                    analysis_id      int        yes #> 16               metadata                execution_start   bigint        yes #> 17               metadata                package_version  varchar        yes #> 18               metadata                      r_version  varchar        yes #> 19               metadata                       platform  varchar        yes #> 20               metadata                  execution_end   bigint        yes #> 21               metadata                    analysis_id      int        yes #> 22 summary_event_duration                     event_name  varchar        yes #> 23 summary_event_duration                            min      int        yes #> 24 summary_event_duration                             q1      int        yes #> 25 summary_event_duration                         median      int        yes #> 26 summary_event_duration                             q2      int        yes #> 27 summary_event_duration                            max      int        yes #> 28 summary_event_duration                        average    float        yes #> 29 summary_event_duration                             sd    float        yes #> 30 summary_event_duration                          count      int        yes #> 31 summary_event_duration                           line  varchar        yes #> 32 summary_event_duration                    analysis_id      int        yes #> 33     treatment_pathways                           path  varchar        yes #> 34     treatment_pathways                           freq      int        yes #> 35     treatment_pathways                            age  varchar        yes #> 36     treatment_pathways                            sex  varchar        yes #> 37     treatment_pathways                     index_year  varchar        yes #> 38     treatment_pathways                    analysis_id      int        yes #> 39        cdm_source_info                cdm_source_name  varchar        yes #> 40        cdm_source_info        cdm_source_abbreviation  varchar        yes #> 41        cdm_source_info                     cdm_holder  varchar        yes #> 42        cdm_source_info             source_description  varchar        yes #> 43        cdm_source_info source_documentation_reference  varchar        yes #> 44        cdm_source_info              cdm_etl_reference  varchar        yes #> 45        cdm_source_info            source_release_date     date        yes #> 46        cdm_source_info               cdm_release_date     date        yes #> 47        cdm_source_info                    cdm_version  varchar        yes #> 48        cdm_source_info             vocabulary_version  varchar        yes #> 49        cdm_source_info                    analysis_id      int        yes #> 50               analyses                    analysis_id      int        yes #> 51               analyses                    description  varchar        yes #> 52              arguments                    analysis_id      int        yes #> 53              arguments                      arguments  varchar         no #>    primaryKey #> 1          no #> 2          no #> 3          no #> 4          no #> 5          no #> 6          no #> 7          no #> 8          no #> 9          no #> 10         no #> 11         no #> 12         no #> 13         no #> 14         no #> 15         no #> 16         no #> 17         no #> 18         no #> 19         no #> 20         no #> 21         no #> 22         no #> 23         no #> 24         no #> 25         no #> 26         no #> 27         no #> 28         no #> 29         no #> 30         no #> 31         no #> 32         no #> 33         no #> 34         no #> 35         no #> 36         no #> 37         no #> 38         no #> 39         no #> 40         no #> 41         no #> 42         no #> 43         no #> 44         no #> 45         no #> 46         no #> 47         no #> 48         no #> 49         no #> 50         no #> 51         no #> 52         no #> 53         no #>                                                                                                                       description #> 1                                                                                                               Number of records #> 2                                                                                                              Number of subjects #> 3                                                                                                               Reason Identifier #> 4                                                                                                              Reason description #> 5                                                                                  Time stamp in seconds since epoch (1970-01-01) #> 6                                                                                                 Analysis identifier foreign key #> 7                                                                                                                    Age in years #> 8                                                                                                        Count per age. May be <x #> 9                                                                                                 Analysis identifier foreign key #> 10                                                                                                                      Sex group #> 11                                                                                                       Count per sex. May be <x #> 12                                                                                                Analysis identifier foreign key #> 13                                                                                                                  Calendar year #> 14                                                                                                      Count per year. May be <x #> 15                                                                                                Analysis identifier foreign key #> 16                                                                                 Time stamp in seconds since epoch (1970-01-01) #> 17                                                                                                      TreatmentPatterns version #> 18                                                                                                                      R version #> 19                                                                                         Platform (Example: x86_64-w64-mingw32) #> 20                                                                                 Time stamp in seconds since epoch (1970-01-01) #> 21                                                                                                Analysis identifier foreign key #> 22                                                                                                    Name of (combination) event #> 23                                                                                                       Minimum duration in days #> 24                                                                                                            Q1 duration in days #> 25                                                                                                        Median duration in days #> 26                                                                                                            Q2 duration in days #> 27                                                                                                       Maximum duration in days #> 28                                                                                                       Average duration in days #> 29                                                                                         Standard Deviation of duration in days #> 30                                                                                                   Count of (combination) event #> 31 Position in pathway. I.e. 1 equals the first event in a pathway. 2 the second etc. Overall indicates across the entire pathway #> 32                                                                                                Analysis identifier foreign key #> 33                                                                                                                        Pathway #> 34                                                                                                               Count of pathway #> 35                                                                                                                    Age stratum #> 36                                                                                                                    Sex stratum #> 37                                                                                                      Target index year stratum #> 38                                                                                                Analysis identifier foreign key #> 39                                                                                                                CDM Source Name #> 40                                                                                                        CDM Source Abbreviation #> 41                                                                                                                     Cdm holder #> 42                                                                                                             Source description #> 43                                                                                                 Source Documentation Reference #> 44                                                                                                              CDM ETL Reference #> 45                                                                                                            Source release date #> 46                                                                                                               CDM release date #> 47                                                                                                                    CDM version #> 48                                                                                                             Vocabulary version #> 49                                                                                                Analysis identifier foreign key #> 50                                                                                                            Analysis identifier #> 51                                                                                                           Analysis description #> 52                                                                                                            Analysis identifier #> 53                                                                                                              Arguments as JSON"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/launchResultsExplorer.html","id":null,"dir":"Reference","previous_headings":"","what":"launchResultsExplorer — launchResultsExplorer","title":"launchResultsExplorer — launchResultsExplorer","text":"Launches ResultExplorer shinyApp.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/launchResultsExplorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"launchResultsExplorer — launchResultsExplorer","text":"","code":"launchResultsExplorer()"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/launchResultsExplorer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"launchResultsExplorer — launchResultsExplorer","text":"(shinyApp)","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/launchResultsExplorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"launchResultsExplorer — launchResultsExplorer","text":"","code":"if (interactive()) {   launchResultsExplorer() }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/plotEventDuration.html","id":null,"dir":"Reference","previous_headings":"","what":"plotEventDuration — plotEventDuration","title":"plotEventDuration — plotEventDuration","text":"plotEventDuration","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/plotEventDuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotEventDuration — plotEventDuration","text":"","code":"plotEventDuration(   eventDurations,   minCellCount = 0,   treatmentGroups = \"both\",   eventLines = NULL,   includeOverall = TRUE )"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/plotEventDuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotEventDuration — plotEventDuration","text":"eventDurations (data.frame) Contents summaryEventDuration.csv file. minCellCount (numeric(1):  0) Min Cell Count per event group. treatmentGroups (character(1): \"\") \"group\": mono-, combination-events. \"individual\": individual (combination) events. \"\": mono-, combination-events, individual (combination) events. eventLines (numeric(n): NULL) Event lines include, .e. c(1, 2, 3) includes first (1), second (2), third (3) lines events. NULL include eventLines. includeOverall (logical(1): TRUE) TRUE: Include overall column eventLines. FALSE: Exclude overall column.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/plotEventDuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotEventDuration — plotEventDuration","text":"ggplot","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/reference/plotEventDuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotEventDuration — plotEventDuration","text":"","code":"# \\donttest{ ableToRun <- all(   require(\"CirceR\", character.only = TRUE, quietly = TRUE),   require(\"CDMConnector\", character.only = TRUE, quietly = TRUE),   require(\"TreatmentPatterns\", character.only = TRUE, quietly = TRUE),   require(\"dplyr\", character.only = TRUE, quietly = TRUE) )  if (ableToRun) {   withr::local_envvar(     R_USER_CACHE_DIR = tempfile(),     EUNOMIA_DATA_FOLDER = Sys.getenv(\"EUNOMIA_DATA_FOLDER\", unset = tempfile())   )    tryCatch({     if (Sys.getenv(\"skip_eunomia_download_test\") != \"TRUE\") {       CDMConnector::downloadEunomiaData(overwrite = TRUE)     }   }, error = function(e) NA)    con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir())   cdm <- cdmFromCon(con, cdmSchema = \"main\", writeSchema = \"main\")    cohortSet <- readCohortSet(     path = system.file(package = \"TreatmentPatterns\", \"exampleCohorts\")   )    cdm <- generateCohortSet(     cdm = cdm,     cohortSet = cohortSet,     name = \"cohort_table\"   )    cohorts <- cohortSet %>%     # Remove 'cohort' and 'json' columns     select(-\"cohort\", -\"json\") %>%     mutate(type = c(\"event\", \"event\", \"event\", \"event\", \"exit\", \"event\", \"event\", \"target\")) %>%     rename(       cohortId = \"cohort_definition_id\",       cohortName = \"cohort_name\",     ) %>%     select(\"cohortId\", \"cohortName\", \"type\")    outputEnv <- computePathways(     cohorts = cohorts,     cohortTableName = \"cohort_table\",     cdm = cdm   )    results <- export(outputEnv)    plotEventDuration(     eventDurations = results$summary_event_duration,     minCellCount = 5,     treatmentGroups = \"group\",     eventLines = 1:4,     includeOverall = FALSE   )    Andromeda::close(outputEnv)   DBI::dbDisconnect(con, shutdown = TRUE) } #>  #> Download completed! #> Creating CDM database /tmp/RtmpyyYHVN/file2d61491a2f58/GiBleed_5.3.zip #> ! cdm name not specified and could not be inferred from the cdm source table #> ℹ Generating 8 cohorts #> ℹ Generating cohort (1/8) - acetaminophen #> ✔ Generating cohort (1/8) - acetaminophen [165ms] #>  #> ℹ Generating cohort (2/8) - amoxicillin #> ✔ Generating cohort (2/8) - amoxicillin [148ms] #>  #> ℹ Generating cohort (3/8) - aspirin #> ✔ Generating cohort (3/8) - aspirin [141ms] #>  #> ℹ Generating cohort (4/8) - clavulanate #> ✔ Generating cohort (4/8) - clavulanate [153ms] #>  #> ℹ Generating cohort (5/8) - death #> ✔ Generating cohort (5/8) - death [115ms] #>  #> ℹ Generating cohort (6/8) - doxylamine #> ✔ Generating cohort (6/8) - doxylamine [140ms] #>  #> ℹ Generating cohort (7/8) - penicillinv #> ✔ Generating cohort (7/8) - penicillinv [137ms] #>  #> ℹ Generating cohort (8/8) - viralsinusitis #> ✔ Generating cohort (8/8) - viralsinusitis [206ms] #>  #> -- Qualifying records for cohort definitions: 1, 2, 3, 4, 5, 6, 7, 8 #> \tRecords: 14041 #> \tSubjects: 2693 #> -- Removing records < minEraDuration (0) #> \tRecords: 11386 #> \tSubjects: 2159 #> >> Starting on target: 8 (viralsinusitis) #> -- Removing events where index date < target index date + indexDateOffset (0) #> \tRecords: 8381 #> \tSubjects: 2159 #> -- splitEventCohorts #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Collapsing eras, eraCollapse (30) #> \tRecords: 8366 #> \tSubjects: 2144 #> -- Iteration 1: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 558 #> \tSubjects: 512 #> -- Iteration 2: minPostCombinationDuration (30), combinatinoWindow (30) #> \tRecords: 554 #> \tSubjects: 512 #> -- After Combination #> \tRecords: 554 #> \tSubjects: 512 #> -- filterTreatments (First) #> \tRecords: 553 #> \tSubjects: 512 #> -- treatment construction done #> \tRecords: 553 #> \tSubjects: 512 # }"},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-300","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 3.0.0","title":"# TreatmentPatterns 3.0.0","text":"CRAN release: 2025-02-06 Save parameters computePathways() export() TreatmentPatternsResults (TPR) object now returned export() TPR object houses different tables, methods plotting. Writing CSV-files export() now optional (export(outputPath = \"/path/\")) TPR object following methods: saveAsCsv(), saveAsZip(), uploadResultsToDb(), load(), plotSunburst(), plotSankey(), plotEventDuration() TPR object following fields:, attrition, metadata, treatment_pathways, summary_event_duration, counts_age, counts_sex, counts_year, cdm_source_info, analyses, arguments Added ResultModelManager support Multiple target cohorts now supported Allow target, event, exit cohorts different tables Stratification now optional export(stratify = TRUE) data pulled database, subjects assigned new subject ID. prevents rounding subject ID’s, unintentional grouping subjects.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-270","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.7.0","title":"# TreatmentPatterns 2.7.0","text":"CRAN release: 2024-11-27 Converted subject_id’s pseudo_subject_id’s pulling data database. Actual subject_id’s stored character(). Added copyright statements R-files. Renamed periodPriorToIndex indexDateOffset. Added life cycle badge ReadMe Added informative error / warning messaging data available compute pathways. Extended output event duration pathways. Renamed summaryStatsTherapyDuration.csv summaryEventDuration.csv. Updated status messaging console. Added attrition.csv capture status messaging time stamps. CRAN release: 2024-11-27 Disabled tests required suggested packages available. Updated examples run required suggested packages available.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-268","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.8","title":"# TreatmentPatterns 2.6.8","text":"CRAN release: 2024-08-29 Updated tests work later versions omopgenerics. Fixed issue combinations sometimes got miss-classified. Fixed issue event starts ends end-date target. Fixed issue collapsing events also combination, filterTreatments = \"\". Added check tests run packages availible. (noSuggests, M1). createSankeyDiagram() now supports pathways 3 levels long.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-267","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.7","title":"# TreatmentPatterns 2.6.7","text":"CRAN release: 2024-05-24 Updated URLs description Updated examples fix compatibility CDMConnector >1.4.0 Updated tests run CRAN","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-266","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.6","title":"# TreatmentPatterns 2.6.6","text":"CRAN release: 2024-04-16 Internal update shinyApp. Update createSankeyDiagram() properly handle combinations consisting >2. Added article package website best practices.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-265","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.5","title":"# TreatmentPatterns 2.6.5","text":"CRAN release: 2024-02-19 Removed stringi, rjson, googleVis dependencies. Fixed unit tests dummy data outside observation data. Fix complex edge-case paths re-occuring treatments. Added unit tests edge-cases. Added warning minEraDuration > minPostCombinationWindow combinationWindow. Fixed issue filterTreatments set \"changes\", age sex columns dropped output. datatypes cohort_table now checked.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-264","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.4","title":"# TreatmentPatterns 2.6.4","text":"CRAN release: 2024-01-26 Fixed issue minPostCombinationWindow broken fix re-occurring treatments. Added unit tests minPostCombinationWindow.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-263","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.3","title":"# TreatmentPatterns 2.6.3","text":"CRAN release: 2024-01-25 Fixed issue duplicate rows exported treatmentPathways.csv file. Added comprehensive description parameter ageWindow export(). Added additional tests validating counts per pathway exported export(). Fixed issue re-occurring treatments pathways. Added dedicated logical tests various pathways. Added dedicated tests target-event cohort overlaps. Fixed spelling error outputs, interaction shiny module.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-262","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.2","title":"# TreatmentPatterns 2.6.2","text":"CRAN release: 2023-12-13 Fixed spelling mistake ‘summaryStatsTherapyDuraion’ ‘summaryStatsTherapyDuration’. Added error one level data available data computing sankey diagram. Removed createSankeyDiagram Renamed createSankeyDiagram2 createSankeyDiagram Removed createSunburstPlot Renamed createSunburstPlot2 createSunburstPlot Fixed issue target cohorts least 1 day long included using DatabaseConnector. Fixed CRAN error running examples. Renamed cellCount minCellCount export documentation. Fixed issue counts pathways computed correctly. Fixed spelling error summaryStatsTherapyDuraion summaryStatsTherapyDuration. Fixed issue export merging two tables fail, one empty.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-261","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.1","title":"# TreatmentPatterns 2.6.1","text":"CRAN release: 2023-12-11 Bumped R version 4.2.1 Added additional unit-tests createSunburstPlot2() createSankeyDiagram2() Updated use DATEDIFF compute difference dates fetching data database. Added functionality choose groups minimum cell count censored. Made parameters ambiguous createSankeyDiagram2 createSunburstPlot2() control figures. Removed addNoPath parameter. Renamed minFreq parameter minCellCount. Added Shiny app exported module classes. Added censoring options treatment pathways falling minCellCount. Simplified part computePathways(). Significantly improved performance export().","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-260","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.6.0","title":"# TreatmentPatterns 2.6.0","text":"CRAN release: 2023-11-13 Added createSunburstPlot2() replacement createSunburstPlot(). createSunburstPlot2() fully replace createSunburstPlot() future version. Moved DatabaseConnector SqlRender Suggests Removed obsolete dependencies: data.table, fs, glue. Internal performance updates. Internal code style updates. Moved basic filtering fetching cohort table. Updated ReadMe functionalities Internal updates LRFS paths, allow paths identical duration.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-252","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.5.2","title":"# TreatmentPatterns 2.5.2","text":"CRAN release: 2023-09-15 Resolved issue finalize method CDMInterface class. Resolved issue schema references. Unified case style. Refactored code createSunburstPlot().","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-251","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.5.1","title":"# TreatmentPatterns 2.5.1","text":"CRAN release: 2023-09-07 Added checks user input: cohorts cohortTableName. Added option directly return HTML using createSankeyDiagram. Added option directly return HTML using createSunburstPlot. Added option ageWindow vector. Added input checking export(). Added additional check frequency createSunburstPlot. Resolved issue createSunburstPlot, converting data.table nested JSON.","code":""},{"path":"https://darwin-eu-dev.github.io/TreatmentPatterns/news/index.html","id":"id_-treatmentpatterns-250","dir":"Changelog","previous_headings":"","what":"# TreatmentPatterns 2.5.0","title":"# TreatmentPatterns 2.5.0","text":"CRAN release: 2023-08-16 Updated interface internal OO usage CDM & DatabaseConnector Shift data.table dplyr. Updated vignettes using new interface General code clean Intermediate files cached accessable Andromeda review. Outputted CSV-files re-imagined flexible use post TreatmentPatterns. Sunburst Sankey plots now directly usable treatmentPathways.csv.","code":""}]
